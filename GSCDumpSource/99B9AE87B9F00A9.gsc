// IW9 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "nuke", "init" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "nuke", "init" ) ]]();

    level._effect["nuke_rolling_death"] = loadfx( "vfx/iw8_mp/killstreak/vfx_nuke_player_death_2.vfx" );
    level.nuke_expl_struct = scripts\cp_mp\utility\game_utility::getlocalestruct( "nuke_expl_pos" );
    _id_C406CDE778937505();
}

_id_C406CDE778937505()
{
    game["dialog"]["nuke_use"] = "killstreak_remote_operator_request_response";
    game["dialog"]["nuke_multi_use"] = "killstreak_remote_operator_request_response";
}

tryusenuke( _id_EA8AB1373211E7E6 )
{
    _id_5BB8BCC61BC76D46 = "nuke";

    if ( isdefined( _id_EA8AB1373211E7E6 ) )
        _id_5BB8BCC61BC76D46 = _id_EA8AB1373211E7E6;

    streakinfo = scripts\cp_mp\utility\killstreak_utility::createstreakinfo( _id_5BB8BCC61BC76D46, self );
    return tryusenukefromstruct( streakinfo );
}

tryusenukefromstruct( streakinfo )
{
    level endon( "game_ended" );
    self endon( "disconnect" );

    if ( isdefined( level.killstreaktriggeredfunc ) )
    {
        if ( !level [[ level.killstreaktriggeredfunc ]]( streakinfo ) )
        {
            streakinfo notify( "killstreak_finished_with_deploy_weapon" );
            return 0;
        }
    }

    nuketype = _id_F7638A68B2C19046( streakinfo );
    streakinfo.nuketype = nuketype;
    _id_EB9CBD43BAEAE1C6 = undefined;
    _id_3DABFA23BEF362B5 = scripts\engine\utility::ter_op( isdefined( streakinfo._id_3DABFA23BEF362B5 ), streakinfo._id_3DABFA23BEF362B5, undefined );

    if ( !isdefined( level.nukeincoming ) )
    {
        level.nukeincoming = 1;
        level.nukeplayer = self;
    }
    else
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "hud", "showErrorMessage" ) )
            self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "hud", "showErrorMessage" ) ]]( "KILLSTREAKS/NUKE_ALREADY_INBOUND" );

        return 0;
    }

    if ( nuketype == 1 )
    {
        _id_9B1DEB5E9D32BBE3 = scripts\cp_mp\killstreaks\killstreakdeploy::streakdeploy_doweaponfireddeploy( streakinfo, scripts\cp_mp\utility\weapon_utility::_id_EEAA22F0CD1FF845( "iw9_spotter_scope_mp" ), "weapon_fired", ::weapongivennuke, ::weaponswitchendednuke, ::weaponfirednuke );
        _id_EB9CBD43BAEAE1C6 = scripts\cp_mp\killstreaks\airstrike::airstrike_getownerlookatpos( self );
        _id_3DABFA23BEF362B5 = 25;
        _id_D44B7B1A5D0E8F39 = undefined;

        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "game", "getOtherTeam" ) )
            _id_D44B7B1A5D0E8F39 = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "game", "getOtherTeam" ) ]]( streakinfo.owner.team );

        if ( isdefined( _id_D44B7B1A5D0E8F39 ) )
            level thread nuke_warnenemiesnukeincoming( _id_D44B7B1A5D0E8F39[0] );
    }
    else if ( !istrue( level.mercywintriggered ) )
        _id_9B1DEB5E9D32BBE3 = scripts\cp_mp\killstreaks\killstreakdeploy::streakdeploy_doweapontabletdeploy( streakinfo, undefined, undefined, undefined, undefined, "ks_remote_nuke_mp", 0 );
    else
        _id_9B1DEB5E9D32BBE3 = 1;

    if ( !istrue( _id_9B1DEB5E9D32BBE3 ) || level.gameended )
    {
        level.nukeincoming = undefined;
        level.nukeplayer = undefined;
        streakinfo notify( "killstreak_finished_with_deploy_weapon" );
        return 0;
    }

    if ( isdefined( level.killstreakbeginusefunc ) )
    {
        if ( !level [[ level.killstreakbeginusefunc ]]( streakinfo ) )
        {
            level.nukeincoming = undefined;
            level.nukeplayer = undefined;
            streakinfo notify( "killstreak_finished_with_deploy_weapon" );
            return 0;
        }
    }

    thread nuke_start( streakinfo, 0, undefined, undefined, _id_EB9CBD43BAEAE1C6, undefined, _id_3DABFA23BEF362B5 );

    if ( nuketype != 1 && !istrue( level.mercywintriggered ) )
        scripts\common\utility::trycall( level.matchdata_logkillstreakevent, "nuke", self.origin );

    return 1;
}

weapongivennuke( streakinfo )
{
    return 1;
}

weaponswitchendednuke( streakinfo, _id_41BF9BF4918115AC )
{
    if ( istrue( _id_41BF9BF4918115AC ) )
        thread scripts\cp_mp\killstreaks\airstrike::airstrike_watchforads( streakinfo, "splash_icon_nuke" );
}

weaponfirednuke( streakinfo, _id_A9DD4E8C5E5C7178, _id_B663FBBCBB2F5780 )
{
    _id_0B21E2E887C161B9 = scripts\cp_mp\killstreaks\airstrike::airstrike_getownerlookatpos( self );

    if ( !isdefined( _id_0B21E2E887C161B9 ) )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "hud", "showErrorMessage" ) )
            self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "hud", "showErrorMessage" ) ]]( "KILLSTREAKS/INVALID_POINT" );

        return "continue";
    }

    return "success";
}

nuke_delaythread( delay, func, owner, streakinfo )
{
    level endon( "nuke_cancelled" );

    if ( isdefined( delay ) )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "nuke", "hostmigration_waitLongDurationWithPause" ) )
            [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "nuke", "hostmigration_waitLongDurationWithPause" ) ]]( delay );
    }

    level thread [[ func ]]( owner, streakinfo );
}

nuke_start( streakinfo, _id_3A565847D875F3EC, _id_82064D7E54B50D83, _id_EDBE27B2D5F1E060, _id_92AADDAD0FCB1FA8, _id_B87822B980D6E763, _id_3DABFA23BEF362B5, weaponoverride )
{
    level endon( "nuke_cancelled" );
    level notify( "used_nuke" );
    self notify( "used_nuke" );
    streakinfo notify( "killstreak_finished_with_deploy_weapon", 1 );
    level.nukeinfo = spawnstruct();

    if ( isplayer( self ) )
        level.nukeinfo.player = self;

    level.nukeinfo.team = self.pers["team"];
    level.nukevisionset = "aftermath_post";
    level.cancelmode = 0;
    level.nukegameover = undefined;
    level.nukedetonated = undefined;
    level.nukecancel = undefined;
    _id_3B25CE9B3E108F2B = 0;
    _id_FFB179778403BED7 = self.origin + ( 0, 0, 30000 ) + anglestoforward( self.angles ) * 30000;
    nukegoalpoint = self.origin + anglestoforward( self.angles ) * 15000;

    if ( isdefined( level.nuke_expl_struct ) )
    {
        nukegoalpoint = level.nuke_expl_struct.origin;
        _id_FFBE59C9DB09BD91 = vectornormalize( ( nukegoalpoint[0], nukegoalpoint[1], 0 ) - ( self.origin[0], self.origin[1], 0 ) );
        _id_FFB179778403BED7 = nukegoalpoint + _id_FFBE59C9DB09BD91 * 15000;
        _id_FFB179778403BED7 = _id_FFB179778403BED7 + ( 0, 0, 30000 ) + _id_FFBE59C9DB09BD91 * 5000;
    }
    else if ( streakinfo.streakname != "nuke_select_location" )
    {

    }

    _id_D7EA0C53E00A2519 = 6;
    _id_FC0FFDF77AEEC040 = 10;
    _id_E9C49CD30E407A2F = 1;

    if ( istrue( _id_3A565847D875F3EC ) )
    {
        _id_3B25CE9B3E108F2B = _id_3A565847D875F3EC;

        if ( istrue( _id_3B25CE9B3E108F2B ) )
            level.cancelmode = 1;
    }

    if ( isdefined( _id_EDBE27B2D5F1E060 ) )
        _id_FFB179778403BED7 = _id_EDBE27B2D5F1E060;

    if ( isdefined( _id_92AADDAD0FCB1FA8 ) )
        nukegoalpoint = _id_92AADDAD0FCB1FA8;

    if ( istrue( _id_B87822B980D6E763 ) )
        _id_D7EA0C53E00A2519 = _id_B87822B980D6E763;

    if ( isdefined( _id_3DABFA23BEF362B5 ) )
        _id_FC0FFDF77AEEC040 = _id_3DABFA23BEF362B5;

    if ( istrue( _id_82064D7E54B50D83 ) )
        _id_E9C49CD30E407A2F = _id_82064D7E54B50D83;

    if ( !isdefined( level.nuke_clockobject ) )
    {
        level.nuke_clockobject = spawn( "script_origin", _id_FFB179778403BED7 + ( 0, 0, 100 ) );
        level.nuke_clockobject dontinterpolate();
        level.nuke_clockobject hide();
    }
    else
        level.nuke_clockobject.origin = _id_FFB179778403BED7 + ( 0, 0, 100 );

    level.nuke_inflictor = spawn( "script_model", nukegoalpoint + ( 0, 0, 5000 ) );
    level.nuke_inflictor setmodel( "tag_origin" );
    level.nuke_inflictor.team = self.team;
    level.nuke_inflictor.owner = self;
    level.nuke_inflictor.streakinfo = streakinfo;

    if ( istrue( level.mercywintriggered ) )
        _id_D7EA0C53E00A2519 = 0.7;

    level thread nuke_startlaunchsequence( self, streakinfo, _id_E9C49CD30E407A2F, _id_FFB179778403BED7, nukegoalpoint, _id_D7EA0C53E00A2519, _id_FC0FFDF77AEEC040, weaponoverride );
    streakinfo.nukegoalpoint = nukegoalpoint;
    _id_F3EB1E98F70122E7 = _id_D7EA0C53E00A2519 + _id_FC0FFDF77AEEC040;

    if ( isdefined( streakinfo.nuketype ) && streakinfo.nuketype == 1 )
        level thread nuke_delaythread( _id_F3EB1E98F70122E7, ::nuke_createradiationzone, self, streakinfo );

    level thread nuke_delaythread( _id_F3EB1E98F70122E7, ::nuke_slowmo, self, streakinfo );
    level thread nuke_delaythread( _id_F3EB1E98F70122E7, ::nuke_explosion, self, streakinfo );
    level thread nuke_delaythread( _id_F3EB1E98F70122E7, ::nuke_earthquake, self, streakinfo );
    level thread nuke_delaythread( _id_F3EB1E98F70122E7 + 0.075, ::nuke_vision, self, streakinfo );
    level thread nuke_delaythread( _id_F3EB1E98F70122E7 + 5, ::nuke_death, self, streakinfo );

    if ( isdefined( level.killstreakfinishusefunc ) )
        level thread [[ level.killstreakfinishusefunc ]]( streakinfo );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "nuke", "addTeamRankXPMultiplier" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "nuke", "addTeamRankXPMultiplier" ) ]]( 2, level.nukeinfo.team, "nuke" );

    if ( level.cancelmode && _id_3B25CE9B3E108F2B )
        level thread nuke_watchownerdisconnect( level.nukeinfo.player );
}

nuke_watchownerdisconnect( owner )
{
    if ( !isdefined( level.nuke_timescalefactor ) )
    {
        soundsettimescalefactorfromtable( "nuke" );
        level.nuke_timescalefactor = 1;
    }

    level endon( "game_ended" );
    owner waittill( "disconnect" );
    nuke_cancel();
}

nuke_cancel()
{
    level.nukecancel = 1;
    level.nukeincoming = undefined;
    level.nukeplayer = undefined;
    nuke_cleartimer();
    setslowmotion( 1, 1, 0 );
    level notify( "nuke_cancelled" );
}

nuke_starttimer( _id_42F65B4B53C1F5D4 )
{
    level endon( "nuke_cancelled" );

    if ( _id_42F65B4B53C1F5D4 <= 1 )
        return;

    if ( istrue( level.mercywintriggered ) )
        setomnvar( "ui_nuke_timer_type", 2 );
    else
        setomnvar( "ui_nuke_timer_type", 0 );

    setomnvar( "ui_nuke_countdown_active", 1 );
    level thread nuke_updateuitimers( _id_42F65B4B53C1F5D4 );
    _id_4D699CF255438B85 = _id_42F65B4B53C1F5D4;
    _id_4301659E40735D70 = 0;

    for ( _id_8A02211E4FF9CB79 = 0; _id_4D699CF255438B85 > 0; _id_4D699CF255438B85-- )
    {
        if ( _id_4D699CF255438B85 <= 10 )
        {
            level.nuke_clockobject playsound( "iw8_nuke_countdown" );

            if ( isdefined( level.nuke_missile ) && !istrue( _id_4301659E40735D70 ) )
            {
                level thread nuke_startmissileflightaudio();
                _id_4301659E40735D70 = 1;
            }
        }

        if ( _id_4D699CF255438B85 <= 4.9 )
        {
            if ( isdefined( level.nuke_missile ) && !istrue( _id_8A02211E4FF9CB79 ) )
            {
                level.nuke_missile playsoundonmovingent( "iw8_nuke_incoming" );
                _id_8A02211E4FF9CB79 = 1;
            }
        }

        wait 1.0;
    }
}

nuke_startmissileflightaudio()
{
    level.nuke_missile endon( "death" );
    level endon( "game_ended" );
    level.nuke_missile playloopsound( "iw8_nuke_flight_loop" );
    wait 7.0;
    level.nuke_missile stoploopsound( "iw8_nuke_flight_loop" );
}

nuke_cleartimer()
{
    setomnvar( "ui_nuke_countdown_active", -1 );
}

nuke_startlaunchsequence( owner, streakinfo, _id_82064D7E54B50D83, _id_3EB0E5F5F61F0A10, _id_45292519459D6838, _id_D7EA0C53E00A2519, _id_FC0FFDF77AEEC040, weaponoverride )
{
    level thread nuke_startprelaunchalarm( _id_D7EA0C53E00A2519, streakinfo, owner );

    if ( isplayer( owner ) && owner ispcplayer() )
        owner setclientomnvar( "nVidiaHighlights_events", 15 );

    if ( streakinfo.streakname != "nuke_select_location" )
    {
        gametype = "";

        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "game", "getGameType" ) )
            gametype = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "game", "getGameType" ) ]]();

        _id_AA0023821E2DEE76 = undefined;

        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "nuke", "stopTheClock" ) )
            _id_AA0023821E2DEE76 = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "nuke", "stopTheClock" ) ]]( gametype );

        if ( isdefined( _id_AA0023821E2DEE76 ) )
        {
            _id_9152DD383AF6E9C2 = getdvarfloat( _id_AA0023821E2DEE76, 0 );

            if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "game", "setOverTimeLimitDvar" ) )
                [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "game", "setOverTimeLimitDvar" ) ]]( _id_9152DD383AF6E9C2 );
        }

        level.dontendonscore = 1;

        foreach ( player in level.players )
        {
            if ( isdefined( player ) )
            {
                player notify( "abort_killcam" );
                player.cancelkillcam = 1;
            }
        }

        level thread nuke_abortkillcamonspawn();
        level.disablespawncamera = 1;
    }

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "nuke", "hostmigration_waitLongDurationWithPause" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "nuke", "hostmigration_waitLongDurationWithPause" ) ]]( _id_D7EA0C53E00A2519 );

    playsoundatpos( _id_3EB0E5F5F61F0A10, "iw8_nuke_dist_launch" );
    level thread nuke_launchmissile( owner, streakinfo, _id_3EB0E5F5F61F0A10, _id_45292519459D6838, _id_FC0FFDF77AEEC040, weaponoverride );
}

nuke_startprelaunchalarm( _id_B807A7599E6F56DC, streakinfo, owner )
{
    level endon( "game_ended" );

    if ( istrue( streakinfo._id_93DBD6174CA50E88 ) )
        return;

    _id_1D2E95F090749D20 = 0;

    if ( isdefined( streakinfo ) && isdefined( owner ) )
        owner thread scripts\cp_mp\utility\killstreak_utility::playkillstreakoperatordialog( streakinfo.streakname, streakinfo.streakname + "_use", 1, 1 );

    while ( _id_B807A7599E6F56DC > 0 )
    {
        if ( isdefined( level.nuke_clockobject ) && !istrue( _id_1D2E95F090749D20 ) )
        {
            level.nuke_clockobject playsound( "iw8_nuke_alarm" );
            _id_1D2E95F090749D20 = 1;
        }

        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "nuke", "hostmigration_waitLongDurationWithPause" ) )
            [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "nuke", "hostmigration_waitLongDurationWithPause" ) ]]( 2 );

        _id_B807A7599E6F56DC = _id_B807A7599E6F56DC - 2;
    }
}

nuke_launchmissile( owner, streakinfo, _id_3EB0E5F5F61F0A10, _id_45292519459D6838, _id_42F65B4B53C1F5D4, weaponoverride )
{
    level endon( "game_ended" );
    _id_05C06CA9338F3C12 = _id_42F65B4B53C1F5D4;
    level thread nuke_starttimer( _id_05C06CA9338F3C12 );

    if ( isdefined( owner ) && isplayer( owner ) )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "hud", "teamPlayerCardSplash" ) )
            level thread [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "hud", "teamPlayerCardSplash" ) ]]( "used_nuke", owner );
    }

    _id_C9D3F58C83D60D18 = "nuke_mp";

    if ( isdefined( weaponoverride ) )
        _id_C9D3F58C83D60D18 = weaponoverride;

    _id_A780020E8099CAB2 = ( 0, 0, -1 * getdvarint( "dvar_B5D7D39D32720E78", 800 ) );
    _id_10AFA5659C39462F = ( _id_45292519459D6838 - 0.5 * _id_A780020E8099CAB2 * squared( _id_42F65B4B53C1F5D4 ) - _id_3EB0E5F5F61F0A10 ) / _id_42F65B4B53C1F5D4;
    level.nuke_missile = magicgrenademanual( _id_C9D3F58C83D60D18, _id_3EB0E5F5F61F0A10, _id_10AFA5659C39462F, _id_42F65B4B53C1F5D4 );
    level.nuke_missile setscriptablepartstate( "launch", "on", 0 );
}

nuke_findunobstructedfiringinfo( _id_8DD61E2F04DC2C58, _id_C85514760EFF92A9, _id_CF90F734F1C34521 )
{
    nukeinfo = spawnstruct();
    _id_1BFA180C6FDD09DD = physics_createcontents( [ "physicscontents_vehicleclip", "physicscontents_missileclip", "physicscontents_clipshot" ] );
    _id_7B669BDCC35FD6FA = -2000;
    _id_7B8A85DCC3882150 = 2000;
    _id_A780020E8099CAB2 = ( 0, 0, -1 * getdvarint( "dvar_B5D7D39D32720E78", 800 ) );

    for (;;)
    {
        _id_BE819573448D27BC = _id_8DD61E2F04DC2C58;
        _id_969BF3922A5AA40B = _id_BE819573448D27BC + ( 0, 0, 5000 );

        if ( scripts\engine\trace::ray_trace_passed( _id_BE819573448D27BC, _id_969BF3922A5AA40B, undefined, _id_1BFA180C6FDD09DD ) )
        {
            _id_10AFA5659C39462F = ( _id_C85514760EFF92A9 - 0.5 * _id_A780020E8099CAB2 * squared( _id_CF90F734F1C34521 ) - _id_BE819573448D27BC ) / _id_CF90F734F1C34521;
            nukeinfo.sourcepos = _id_BE819573448D27BC;
            nukeinfo.goalpos = _id_C85514760EFF92A9;
            nukeinfo.initvelocity = _id_10AFA5659C39462F;
            break;
        }

        _id_BE819573448D27BC = _id_BE819573448D27BC + anglestoright( self.angles ) * randomintrange( _id_7B669BDCC35FD6FA, _id_7B8A85DCC3882150 );
        _id_7B669BDCC35FD6FA = int( _id_7B669BDCC35FD6FA * 1.3 );
        _id_7B8A85DCC3882150 = int( _id_7B8A85DCC3882150 * 1.3 );
        waitframe();
    }

    return nukeinfo;
}

nuke_explosion( owner, streakinfo )
{
    level endon( "nuke_cancelled" );
    nuke_cleartimer();
    level.nukedetonated = 1;
    level notify( "nuke_detonated" );
    level.nuke_explosionpos = level.nuke_missile.origin;
    level.nuke_missile setscriptablepartstate( "launch", "off", 0 );
    level.nuke_missile delete();
    _id_B19D10A33613EF12 = spawn( "script_model", level.nuke_explosionpos );
    _id_B19D10A33613EF12 setmodel( "ks_nuke_mp" );
    _id_B19D10A33613EF12 setscriptablepartstate( "explode", "on", 0 );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "entity", "delayEntDelete" ) )
        _id_B19D10A33613EF12 thread [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "entity", "delayEntDelete" ) ]]( 50 );

    thread nuke_startexplosionaudio( level.nuke_explosionpos );

    if ( streakinfo.streakname != "nuke_select_location" )
    {
        foreach ( _id_7DC3241E7F3C6B24 in level.characters )
        {
            if ( [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "nuke", "cankill" ) ]]( _id_7DC3241E7F3C6B24, nuke_cankilleverything() ) )
            {
                if ( isplayer( _id_7DC3241E7F3C6B24 ) )
                {
                    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "player", "isReallyAlive" ) )
                    {
                        if ( [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "player", "isReallyAlive" ) ]]( _id_7DC3241E7F3C6B24 ) )
                            _id_7DC3241E7F3C6B24 thread nuke_startnukedeathfx();
                    }
                }
            }
        }
    }
    else
    {
        foreach ( _id_7DC3241E7F3C6B24 in level.characters )
        {
            if ( isplayer( _id_7DC3241E7F3C6B24 ) && [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "player", "isReallyAlive" ) ]]( _id_7DC3241E7F3C6B24 ) )
                _id_7DC3241E7F3C6B24 thread nuke_startnukedeathfx_chooselocationversion();
        }
    }
}

nuke_startexplosionaudio( _id_408F3E834E201526 )
{
    foreach ( player in level.players )
        player setsoundsubmix( "mp_killstreak_nuke", 6 );

    playsoundatpos( _id_408F3E834E201526, "iw8_nuke_impact_low" );
    playsoundatpos( _id_408F3E834E201526, "iw8_nuke_incoming_blast_wave" );
    playsoundatpos( _id_408F3E834E201526, "iw8_nuke_blast" );
}

nuke_slowmo( owner, streakinfo )
{
    if ( streakinfo.streakname == "nuke_select_location" )
        return;

    level endon( "nuke_cancelled" );
    setnuketimescalefactor();
    level waittill( "nuke_death" );
    setslowmotion( 1, 0.25, 0.1 );
}

setnuketimescalefactor()
{
    if ( !isdefined( level.nuke_timescalefactor ) )
    {
        soundsettimescalefactorfromtable( "nuke" );
        level.nuke_timescalefactor = 1;
    }
}

nuke_dof( owner, streakinfo )
{
    level endon( "nuke_cancelled" );

    foreach ( player in level.players )
        player thread nuke_adjustexplosiondof();
}

nuke_adjustexplosiondof()
{
    self endon( "disconnect" );
    self setphysicaldepthoffield( 2.0, 1500 );
}

nuke_vision( owner, streakinfo )
{
    level endon( "nuke_cancelled" );
    level.nukevisioninprogress = 1;

    if ( istrue( streakinfo._id_9ED60D0D51F90D76 ) )
        return;

    visionsetnaked( "nuke_global_flash", 0.05 );
    setdvar( "dvar_D18838F3E4B65D16", 0 );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "nuke", "hostmigration_waitLongDurationWithPause" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "nuke", "hostmigration_waitLongDurationWithPause" ) ]]( 0.5 );

    level notify( "nuke_aftermath_post_started" );
    level thread nuke_fadeflashvision( 1, 2 );
    level waittill( "nuke_death" );
    level thread nuke_updatevisiononhostmigration();
    level nuke_setaftermathvision( 5 );
    wait 1.0;

    foreach ( player in level.players )
    {
        if ( !isdefined( player ) )
            continue;

        player setclientomnvar( "ui_world_fade", 1.0 );
        level thread scripts\cp_mp\utility\game_utility::fadetoblackforplayer( player, 0, 0.25 );
    }

    level.nukevisioninprogress = 0;
}

nuke_fadeflashvision( _id_A327466DF35C5C88, _id_9D7A33CA9811C391 )
{
    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "nuke", "hostmigration_waitLongDurationWithPause" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "nuke", "hostmigration_waitLongDurationWithPause" ) ]]( _id_A327466DF35C5C88 );

    visionsetnaked( "", _id_9D7A33CA9811C391 );
}

nuke_death( owner, streakinfo )
{
    level endon( "nuke_cancelled" );
    level endon( "game_ended" );
    level notify( "nuke_death" );
    winner = level.nukeinfo.player;

    if ( level.teambased )
        winner = level.nuke_inflictor.team;

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "nuke", "hostmigration_waitTillHostMigrationDone" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "nuke", "hostmigration_waitTillHostMigrationDone" ) ]]();

    _id_CFC1A4C269CFFB70 = nuke_cankilleverything();

    if ( isdefined( level.nukeinfo.player ) )
    {
        if ( streakinfo.streakname != "nuke_select_location" )
        {
            foreach ( _id_7DC3241E7F3C6B24 in level.characters )
            {
                if ( [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "nuke", "cankill" ) ]]( _id_7DC3241E7F3C6B24, _id_CFC1A4C269CFFB70 ) )
                {
                    if ( isplayer( _id_7DC3241E7F3C6B24 ) )
                    {
                        _id_7DC3241E7F3C6B24.nuked = 1;

                        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "player", "isReallyAlive" ) )
                        {
                            if ( [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "player", "isReallyAlive" ) ]]( _id_7DC3241E7F3C6B24 ) )
                            {
                                if ( !istrue( _id_7DC3241E7F3C6B24.safefromnuke ) )
                                {
                                    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "nuke", "killPlayerWithAttacker" ) )
                                        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "nuke", "killPlayerWithAttacker" ) ]]( _id_7DC3241E7F3C6B24 );
                                }
                            }
                        }
                    }
                }
            }

            if ( istrue( _id_CFC1A4C269CFFB70 ) )
            {
                if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "nuke", "destroyActiveObjects" ) )
                    [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "nuke", "destroyActiveObjects" ) ]]();
            }
            else if ( !istrue( level.blocknukekills ) )
            {
                _id_B0C33D224B825287 = undefined;

                if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "game", "getEnemyTeams" ) )
                    _id_B0C33D224B825287 = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "game", "getEnemyTeams" ) ]]( level.nuke_inflictor.team );

                foreach ( _id_F90358454413407F in _id_B0C33D224B825287 )
                {
                    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "nuke", "destroyActiveObjects" ) )
                        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "nuke", "destroyActiveObjects" ) ]]( _id_F90358454413407F );
                }
            }

            if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "player", "printGameAction" ) )
                [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "player", "printGameAction" ) ]]( "killstreak ended - nuke", level.nukeinfo.player );
        }
        else
        {
            foreach ( _id_7DC3241E7F3C6B24 in level.characters )
            {
                _id_62644FCD8A72B2E8 = 0;

                if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "nuke", "isPlayerInRadZone" ) )
                    _id_62644FCD8A72B2E8 = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "nuke", "isPlayerInRadZone" ) ]]( _id_7DC3241E7F3C6B24, level.nuke_explosionpos, 25000000 );

                if ( _id_62644FCD8A72B2E8 )
                {
                    _id_7DC3241E7F3C6B24.nuked = 1;

                    if ( [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "player", "isReallyAlive" ) ]]( _id_7DC3241E7F3C6B24 ) )
                    {
                        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "nuke", "killPlayer" ) )
                            [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "nuke", "killPlayer" ) ]]( _id_7DC3241E7F3C6B24 );
                    }
                }
            }
        }

        if ( !istrue( level.mercywintriggered ) )
        {
            if ( isdefined( level.nukeinfo.player ) && isdefined( streakinfo ) )
                level.nukeinfo.player scripts\cp_mp\utility\killstreak_utility::recordkillstreakendstats( streakinfo );
        }
    }

    if ( istrue( _id_CFC1A4C269CFFB70 ) )
    {
        while ( istrue( level.nukevisioninprogress ) )
            waitframe();

        level.nukegameover = 1;
        level thread nuke_delayendgame( 0, winner );
    }
}

nuke_delayendgame( _id_74B5B12BB6514385, winner )
{
    level endon( "game_ended" );
    level thread nuke_playmushroombnk( 1 );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "nuke", "delayEndGame" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "nuke", "delayEndGame" ) ]]( _id_74B5B12BB6514385, winner );
}

nuke_playmushroombnk( _id_74B5B12BB6514385 )
{
    level endon( "game_ended" );
    scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( _id_74B5B12BB6514385 );
    level notify( "play_nuke_bnk" );
}

nuke_earthquake( owner, streakinfo )
{
    level endon( "nuke_cancelled" );

    if ( !isdefined( level.mapcenter ) )
        _id_9798C7AA7C0A8A06 = streakinfo.nukegoalpoint;
    else
        _id_9798C7AA7C0A8A06 = level.mapcenter;

    earthquake( 0.4, 1.5, _id_9798C7AA7C0A8A06, 100000 );
    level thread nuke_playshockwaveearthquake( streakinfo );
    level waittill( "nuke_death" );

    if ( streakinfo.streakname == "nuke_select_location" )
        earthquake( 0.3, 1, _id_9798C7AA7C0A8A06, 100000 );
    else
        earthquake( 0.7, 3, _id_9798C7AA7C0A8A06, 100000 );

    foreach ( player in level.players )
        player playrumbleonentity( "damage_heavy" );
}

nuke_playshockwaveearthquake( streakinfo )
{
    level endon( "nuke_cancelled" );
    level endon( "nuke_death" );
    _id_09B5BA1713B6DB4D = 0.01;

    if ( !isdefined( level.mapcenter ) )
        _id_9798C7AA7C0A8A06 = streakinfo.nukegoalpoint;
    else
        _id_9798C7AA7C0A8A06 = level.mapcenter;

    for (;;)
    {
        earthquake( _id_09B5BA1713B6DB4D, 0.05, _id_9798C7AA7C0A8A06, 100000 );
        wait 0.05;
        _id_09B5BA1713B6DB4D = _id_09B5BA1713B6DB4D + 0.0015;

        if ( _id_09B5BA1713B6DB4D >= 0.3 )
            _id_09B5BA1713B6DB4D = 0.3;
    }
}

onplayerspawned()
{
    if ( isdefined( level.nukedetonated ) )
        thread nuke_setvisionforplayer( 0, 0 );
}

nuke_setvisionforplayer( _id_74B5B12BB6514385, _id_B18D3429CF88F29F )
{
    if ( isdefined( _id_74B5B12BB6514385 ) && _id_74B5B12BB6514385 > 0 )
        wait( _id_74B5B12BB6514385 );

    self visionsetnakedforplayer( "nuke_global_aftermath", _id_B18D3429CF88F29F );
}

nuke_updateuitimers( _id_42F65B4B53C1F5D4 )
{
    level endon( "game_ended" );
    level endon( "disconnect" );
    level endon( "nuke_cancelled" );
    level endon( "nuke_death" );
    _id_EF2F4DE95E92EEC7 = _id_42F65B4B53C1F5D4 * 1000 + gettime();
    setomnvar( "ui_nuke_end_milliseconds", _id_EF2F4DE95E92EEC7 );
    level waittill( "host_migration_begin" );
    _id_3B5803E733581858 = 0;

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "nuke", "hostmigration_waitTillHostMigrationDone" ) )
        _id_3B5803E733581858 = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "nuke", "hostmigration_waitLongDurationWithPause" ) ]]();

    if ( _id_3B5803E733581858 > 0 )
        setomnvar( "ui_nuke_end_milliseconds", _id_EF2F4DE95E92EEC7 + _id_3B5803E733581858 );
}

nuke_updatevisiononhostmigration()
{
    level endon( "game_ended" );

    for (;;)
    {
        level waittill( "host_migration_end" );
        level nuke_setaftermathvision( 0 );
    }
}

nuke_setaftermathvision( _id_B18D3429CF88F29F )
{
    _id_4307F31ED4B7C2A2 = 1;

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "nuke", "shouldNukeEndGame" ) )
        _id_4307F31ED4B7C2A2 = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "nuke", "shouldNukeEndGame" ) ]]();

    if ( !_id_4307F31ED4B7C2A2 )
        return;

    if ( isdefined( level.nukedeathvisionfunc ) )
        level thread [[ level.nukedeathvisionfunc ]]();

    nuke_slamtoblack();
}

nuke_slamtoblack()
{
    if ( getdvarint( "dvar_CB4F00AEAA2EB6B3" ) == 1 )
        return;

    setomnvarforallclients( "post_game_state", 11 );

    foreach ( player in level.players )
    {
        if ( !isdefined( player ) )
            continue;

        level thread scripts\cp_mp\utility\game_utility::fadetoblackforplayer( player, 1 );
        player setclienttriggeraudiozonepartialwithfade( "nuke_killstreak", 2, "ambient", "ambient_events" );
    }
}

nuke_removefadeonbnkplay()
{
    level endon( "game_ended" );
    level waittill( "play_nuke_bnk" );

    foreach ( player in level.players )
    {
        if ( !isdefined( player ) )
            continue;

        level thread scripts\cp_mp\utility\game_utility::_id_852712268D005332( player, 0, 1 );
    }
}

nuke_startnukedeathfx()
{
    self endon( "disconnect" );

    if ( !istrue( self.safefromnuke ) )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "weapons", "enableBurnFX" ) )
            self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "weapons", "enableBurnFX" ) ]]( 1, "nuke_active" );
    }

    thread nuke_playrollingdeathfx( 3.25 );
    level waittill( "nuke_death" );

    if ( isdefined( self.burnfxenabled ) && self.burnfxenabled > 0 )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "weapons", "disableBurnFX" ) )
            self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "weapons", "disableBurnFX" ) ]]( 1, "nuke_active" );
    }

    _id_367958FE652704C6 = 0;

    if ( _id_367958FE652704C6 )
        return;
}

nuke_startnukedeathfx_chooselocationversion()
{
    self endon( "disconnect" );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "weapons", "enableBurnFX" ) )
        self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "weapons", "enableBurnFX" ) ]]( 1, "nuke_active" );

    thread nuke_playrollingdeathfx( 3.25 );
    level waittill( "nuke_death" );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "weapons", "disableBurnFX" ) )
        self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "weapons", "disableBurnFX" ) ]]( 1, "nuke_active" );
}

nuke_playrollingdeathfx( _id_74B5B12BB6514385 )
{
    self endon( "disconnect" );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "nuke", "hostmigration_waitLongDurationWithPause" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "nuke", "hostmigration_waitLongDurationWithPause" ) ]]( _id_74B5B12BB6514385 );

    if ( !scripts\cp_mp\utility\player_utility::isusingremote() )
        self visionsetnakedforplayer( "nuke_deathblur", 4 );

    _id_65DFD5B2EA1F9B40 = self.origin;
    _id_632C8E583FC9AEA9 = level.nuke_explosionpos;
    _id_74AF035D1495D131 = _id_65DFD5B2EA1F9B40;
    _id_212532A53935EAC7 = "nuke_rolling_death";
    playfx( scripts\engine\utility::getfx( _id_212532A53935EAC7 ), _id_65DFD5B2EA1F9B40, _id_632C8E583FC9AEA9 - _id_74AF035D1495D131, undefined, self );
}

nuke_atomizebody()
{
    self endon( "disconnect" );
    loc[0][0]["org"] = self gettagorigin( "j_spineupper" );
    loc[0][0]["angles"] = self gettagangles( "j_spineupper" );
    loc[0][1]["org"] = self gettagorigin( "j_spinelower" );
    loc[0][1]["angles"] = self gettagangles( "j_spinelower" );
    loc[0][2]["org"] = self gettagorigin( "j_head" );
    loc[0][2]["angles"] = self gettagangles( "j_head" );
    loc[1][0]["org"] = self gettagorigin( "j_knee_ri" );
    loc[1][0]["angles"] = self gettagangles( "j_knee_ri" );
    loc[1][1]["org"] = self gettagorigin( "j_knee_le" );
    loc[1][1]["angles"] = self gettagangles( "j_knee_le" );
    loc[1][2]["org"] = self gettagorigin( "j_elbow_ri" );
    loc[1][2]["angles"] = self gettagangles( "j_elbow_ri" );
    loc[1][3]["org"] = self gettagorigin( "j_elbow_le" );
    loc[1][3]["angles"] = self gettagangles( "j_elbow_le" );
    loc[2][0]["org"] = self gettagorigin( "j_ankle_le" );
    loc[2][0]["angles"] = self gettagangles( "j_ankle_le" );
    loc[2][1]["org"] = self gettagorigin( "j_ankle_ri" );
    loc[2][1]["angles"] = self gettagangles( "j_ankle_ri" );
    loc[2][2]["org"] = self gettagorigin( "j_wrist_le" );
    loc[2][2]["angles"] = self gettagangles( "j_wrist_le" );
    loc[2][3]["org"] = self gettagorigin( "j_wrist_ri" );
    loc[2][3]["angles"] = self gettagangles( "j_wrist_ri" );
    self.body hide();
    _id_65DFD5B2EA1F9B40 = self.body.origin;
    _id_632C8E583FC9AEA9 = level.nuke_inflictor.origin * ( 1, 1, 0 );
    _id_74AF035D1495D131 = _id_65DFD5B2EA1F9B40 * ( 1, 1, 0 );
    _id_212532A53935EAC7 = "nuke_atomize_body";
    playfx( scripts\engine\utility::getfx( _id_212532A53935EAC7 ), _id_65DFD5B2EA1F9B40, _id_632C8E583FC9AEA9 - _id_74AF035D1495D131 );
}

nuke_cankilleverything()
{
    _id_CFC1A4C269CFFB70 = 1;

    if ( getdvarint( "dvar_CB4F00AEAA2EB6B3" ) == 1 )
        return 0;

    return _id_CFC1A4C269CFFB70;
}

nuke_createradiationzone( owner, streakinfo )
{
    if ( !scripts\common\utility::iscp() )
    {
        if ( 0 )
        {
            wait 10;
            playfx( scripts\engine\utility::getfx( "vfx_nuke_zone_5000_static_s" ), ( 0, 0, 0 ) );
            nuke_registerradzone( ( 0, 0, 0 ) );

            if ( !isdefined( level.nukedangerzones ) )
                level.nukedangerzones = [];

            level.nukedangerzones[level.nukedangerzones.size] = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "spawn", "addSpawnDangerZone" ) ]]( streakinfo.nukegoalpoint - ( 0, 0, 1000 ), 5000, 15000, "axis", 4000 );
            level.nukedangerzones[level.nukedangerzones.size] = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "spawn", "addSpawnDangerZone" ) ]]( streakinfo.nukegoalpoint - ( 0, 0, 1000 ), 5000, 15000, "allies", 4000 );
        }
        else
        {
            streakinfo.sealevelorigin = ( streakinfo.nukegoalpoint[0], streakinfo.nukegoalpoint[1], scripts\cp_mp\parachute::getc130sealevel() );
            playfx( scripts\engine\utility::getfx( "vfx_nuke_zone_5000_static_s" ), streakinfo.sealevelorigin );
            nuke_registerradzone( streakinfo.sealevelorigin );

            if ( !isdefined( level.nukedangerzones ) )
                level.nukedangerzones = [];

            level.nukedangerzones[level.nukedangerzones.size] = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "spawn", "addSpawnDangerZone" ) ]]( streakinfo.nukegoalpoint - ( 0, 0, 1000 ), 5000, 15000, "axis", 4000 );
            level.nukedangerzones[level.nukedangerzones.size] = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "spawn", "addSpawnDangerZone" ) ]]( streakinfo.nukegoalpoint - ( 0, 0, 1000 ), 5000, 15000, "allies", 4000 );
        }
    }

    thread nuke_finalizelocationnuke( owner );
}

nuke_registerradzone( origin )
{
    if ( !isdefined( level.radzones ) )
    {
        level.radzones = [];
        level thread nuke_radzones_think();
    }

    level.radzones[level.radzones.size] = origin;
}

nuke_removeradzone( _id_B8D14E966AC9D9B8 )
{
    level.radzones = scripts\engine\utility::array_remove( level.radzones, _id_B8D14E966AC9D9B8 );
}

nuke_radzones_think()
{
    level endon( "game_ended" );
    damagetick = 10;

    for (;;)
    {
        foreach ( player in level.players )
        {
            player.inradzone = 0;

            foreach ( _id_456B8F0EA933D0E5 in level.radzones )
            {
                _id_62644FCD8A72B2E8 = 0;

                if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "nuke", "isPlayerInRadZone" ) )
                    _id_62644FCD8A72B2E8 = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "nuke", "isPlayerInRadZone" ) ]]( player, _id_456B8F0EA933D0E5, 25000000 );

                if ( _id_62644FCD8A72B2E8 )
                {
                    if ( istrue( player.gasmaskequipped ) )
                        player scripts\cp_mp\gasmask::processdamage( damagetick );
                    else
                    {
                        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "game", "tutorialPrint" ) )
                            player thread [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "game", "tutorialPrint" ) ]]( "MP/NUKE_RADIATION_HURT", 2 );

                        player dodamage( damagetick, player.origin, player, undefined, "MOD_TRIGGER_HURT" );
                    }

                    player.inradzone = 1;
                    break;
                }
            }

            if ( player.inradzone )
                continue;

            foreach ( _id_456B8F0EA933D0E5 in level.radzones )
            {
                _id_62644FCD8A72B2E8 = 0;

                if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "nuke", "isPlayerInRadZone" ) )
                    _id_62644FCD8A72B2E8 = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "nuke", "isPlayerInRadZone" ) ]]( player, _id_456B8F0EA933D0E5, 36000000 );

                if ( _id_62644FCD8A72B2E8 )
                {
                    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "game", "tutorialPrint" ) )
                        player thread [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "game", "tutorialPrint" ) ]]( "MP/NUKE_RADIATION_WARNING", 2 );

                    break;
                }
            }
        }

        wait 1;
    }
}

nuke_warnenemiesnukeincoming( _id_9464D7D05C5CA6B5 )
{
    level endon( "nuke_death" );

    for (;;)
    {
        foreach ( player in level.players )
        {
            if ( player.team == _id_9464D7D05C5CA6B5 )
            {
                if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "game", "tutorialPrint" ) )
                    player thread [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "game", "tutorialPrint" ) ]]( "MP/NUKE_SELECT_LAUNCH_DETECTED", 2 );
            }
        }

        wait 1;
    }
}

nuke_finalizelocationnuke( owner )
{
    wait 20;

    if ( istrue( owner.hasnukeselectks ) )
        owner.hasnukeselectks = 0;

    if ( isdefined( owner.killcountthislife ) )
        owner.killcountthislife = 0;

    visionsetnaked( "", 1 );
}

nuke_abortkillcamonspawn()
{
    level endon( "game_ended" );

    for (;;)
    {
        level waittill( "player_spawned", player );

        if ( isdefined( player ) )
        {
            player notify( "abort_killcam" );
            player.cancelkillcam = 1;
        }
    }
}

_id_F7638A68B2C19046( streakinfo )
{
    nuketype = undefined;

    switch ( streakinfo.streakname )
    {
        case "nuke_select_location":
            nuketype = 1;
            break;
        case "nuke_multi":
            nuketype = 2;
            break;
        default:
            nuketype = 0;
            break;
    }

    return nuketype;
}
