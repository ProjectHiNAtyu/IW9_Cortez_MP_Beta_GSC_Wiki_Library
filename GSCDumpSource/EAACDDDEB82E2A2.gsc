// IW9 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    if ( !challengesenabled() )
        return;

    _id_5EE013539B0EA23C = 0;

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "game", "isBRStyleGameType" ) )
    {
        if ( [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "game", "isBRStyleGameType" ) ]]() )
            _id_5EE013539B0EA23C = 1;
    }

    if ( !_id_5EE013539B0EA23C && scripts\cp_mp\utility\script_utility::issharedfuncdefined( "game", "getGameType" ) )
    {
        gametype = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "game", "getGameType" ) ]]();

        if ( isdefined( gametype ) && gametype == "brtdm" )
            _id_5EE013539B0EA23C = 1;
    }

    if ( _id_5EE013539B0EA23C )
    {
        level.challengetimersenabled = 1;
        level setupchallengelocales();
        level thread trackchallengetimers();
    }
}

setupchallengelocales()
{
    level.localetriggers = [];
    _id_D09AECDB0D855501 = getentarray( "location_volume", "targetname" );

    if ( isdefined( _id_D09AECDB0D855501 ) && _id_D09AECDB0D855501.size > 0 )
    {
        foreach ( area in _id_D09AECDB0D855501 )
        {
            if ( !isdefined( area.script_noteworthy ) )
                continue;

            area.sprayid = -1;

            switch ( area.script_noteworthy )
            {
                case "airfield":
                    area.localeid = 1;
                    area.sprayid = 0;
                    break;
                case "boneyard":
                    area.localeid = 2;
                    area.sprayid = 1;
                    break;
                case "coast":
                    area.localeid = 3;
                    break;
                case "dam":
                    area.localeid = 4;
                    break;
                case "downtown":
                    area.localeid = 5;
                    area.sprayid = 2;
                    break;
                case "farms":
                    area.localeid = 6;
                    break;
                case "gulag":
                    area.localeid = 7;
                    break;
                case "hospital":
                    area.localeid = 8;
                    area.sprayid = 3;
                    break;
                case "junkyard":
                    area.localeid = 9;
                    break;
                case "layover":
                    area.localeid = 10;
                    break;
                case "lumber":
                    area.localeid = 11;
                    break;
                case "maintenance":
                    area.localeid = 12;
                    break;
                case "outskirts":
                    area.localeid = 13;
                    break;
                case "park":
                    area.localeid = 14;
                    break;
                case "port":
                    area.localeid = 15;
                    area.sprayid = 4;
                    break;
                case "quarry":
                    area.localeid = 16;
                    break;
                case "river_east":
                    area.localeid = 17;
                    break;
                case "river_north":
                    area.localeid = 18;
                    break;
                case "river_south":
                    area.localeid = 19;
                    break;
                case "stadium":
                    area.localeid = 20;
                    break;
                case "storagetown":
                    area.localeid = 21;
                    break;
                case "suburbs_airfield":
                    area.localeid = 22;
                    break;
                case "suburbs_coast":
                    area.localeid = 23;
                    break;
                case "suburbs_dam":
                    area.localeid = 24;
                    break;
                case "suburbs_eastriver":
                    area.localeid = 25;
                    break;
                case "suburbs_hospital":
                    area.localeid = 26;
                    break;
                case "suburbs_quarry":
                    area.localeid = 27;
                    break;
                case "suburbs_stadium":
                    area.localeid = 28;
                    break;
                case "suburbs_super":
                    area.localeid = 29;
                    break;
                case "suburbs_transit":
                    area.localeid = 30;
                    break;
                case "super":
                    area.localeid = 31;
                    break;
                case "transit":
                    area.localeid = 32;
                    break;
                case "tvstation":
                    area.localeid = 33;
                    break;
            }
        }

        level.localetriggers = _id_D09AECDB0D855501;
    }
}

challengesenabled()
{
    return level.challengesallowed;
}

challengesenabledforplayer()
{
    if ( !challengesenabled() )
        return 0;

    if ( !isplayer( self ) || isai( self ) )
        return 0;

    if ( istrue( level.challengesdisabled ) )
        return 0;

    return 1;
}

_id_5C7E8BCDC167FD84()
{
    if ( !isdefined( level._id_31FE2D8A33B25B91 ) )
        level._id_31FE2D8A33B25B91 = getdvarint( "dvar_5FE27D3EFAC4A807", 0 );

    return level._id_31FE2D8A33B25B91;
}

challengetimersenabledforplayer()
{
    if ( !istrue( level.challengetimersenabled ) )
        return 0;

    if ( !challengesenabledforplayer() )
        return 0;

    return 1;
}

validchallengetimer( _id_33BE63BF54F72FA9 )
{
    if ( !isdefined( self.challengestarttime ) )
        return 0;

    if ( !isdefined( self.challengestarttime[_id_33BE63BF54F72FA9] ) )
        return 0;

    return 1;
}

resetchallengetimer( _id_33BE63BF54F72FA9 )
{
    if ( !challengetimersenabledforplayer() )
        return;

    if ( !validchallengetimer( _id_33BE63BF54F72FA9 ) )
        return;

    self.challengestarttime[_id_33BE63BF54F72FA9] = 0;
}

startchallengetimer( _id_33BE63BF54F72FA9 )
{
    if ( !challengetimersenabledforplayer() )
        return;

    if ( !isdefined( self.challengestarttime ) )
        self.challengestarttime = [];

    if ( !isdefined( self.challengestarttime[_id_33BE63BF54F72FA9] ) )
        self.challengestarttime[_id_33BE63BF54F72FA9] = 0;

    self.challengestarttime[_id_33BE63BF54F72FA9] = gettime();
}

stopchallengetimer( _id_33BE63BF54F72FA9 )
{
    if ( !challengetimersenabledforplayer() )
        return;

    if ( !validchallengetimer( _id_33BE63BF54F72FA9 ) )
        return;

    if ( self.challengestarttime[_id_33BE63BF54F72FA9] > 0 )
    {
        _id_AC846BE90E9552AB = gettime() - self.challengestarttime[_id_33BE63BF54F72FA9];

        if ( _id_AC846BE90E9552AB > 0 )
            self reportchallengeuserevent( _id_33BE63BF54F72FA9, _id_AC846BE90E9552AB, getoperators() );

        self.challengestarttime[_id_33BE63BF54F72FA9] = 0;
    }
}

checkandreportchallengetimer( _id_33BE63BF54F72FA9, _id_E0BA1A2E8FFB8E1E )
{
    if ( !challengetimersenabledforplayer() )
        return;

    if ( !validchallengetimer( _id_33BE63BF54F72FA9 ) )
        return;

    if ( self.challengestarttime[_id_33BE63BF54F72FA9] > 0 )
    {
        _id_AC846BE90E9552AB = gettime() - self.challengestarttime[_id_33BE63BF54F72FA9];

        if ( _id_AC846BE90E9552AB >= _id_E0BA1A2E8FFB8E1E )
        {
            self reportchallengeuserevent( _id_33BE63BF54F72FA9, _id_AC846BE90E9552AB, getoperators() );
            self.challengestarttime[_id_33BE63BF54F72FA9] = gettime();
        }
    }
}

trackchallengetimers()
{
    level endon( "game_ended" );

    for (;;)
    {
        if ( isdefined( level.players ) )
        {
            totalplayers = level.players.size;

            for ( _id_AC0E594AC96AA3A8 = 0; _id_AC0E594AC96AA3A8 < totalplayers; _id_AC0E594AC96AA3A8++ )
            {
                if ( isalive( level.players[_id_AC0E594AC96AA3A8] ) )
                    level.players[_id_AC0E594AC96AA3A8] checkandreportchallengetimer( "driving", 60000 );
            }
        }

        wait 1;
    }
}

onplayerkilled( inflictor, attacker, damage, damageflags, meansofdeath, objweapon, hitloc, modifiers )
{
    if ( !attacker challengesenabledforplayer() )
        return;

    victim = self;

    if ( !isplayer( attacker ) )
    {
        if ( isdefined( inflictor ) && isplayer( inflictor ) )
            attacker = inflictor;
        else
            return;
    }

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "player", "isFriendly" ) )
    {
        if ( ![[ scripts\cp_mp\utility\script_utility::getsharedfunc( "player", "isFriendly" ) ]]( attacker.team, victim ) )
        {
            if ( isdefined( objweapon.parentweapon ) )
                objweapon = objweapon.parentweapon;

            weapons = weaponfixup( objweapon, attacker );
            _id_425D52C81F1883FC = 0;
            _id_425D55C81F188A95 = 0;

            if ( isdefined( modifiers ) )
            {
                _id_425D52C81F1883FC = modifiers["mask"];
                _id_425D55C81F188A95 = modifiers["mask2"];
            }

            _id_18545210159E68C8( attacker, weapons, victim, _id_425D52C81F1883FC, _id_425D55C81F188A95, objweapon, damage, meansofdeath );
        }
    }
}

_id_5A0AE8BC2B80C0C0( inflictor, attacker, damage, meansofdeath, objweapon, hitloc, modifiers )
{
    if ( !attacker challengesenabledforplayer() )
        return;

    victim = self;

    if ( !isplayer( attacker ) )
    {
        if ( isdefined( inflictor ) && isplayer( inflictor ) )
            attacker = inflictor;
        else
            return;
    }

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "player", "isFriendly" ) )
    {
        if ( ![[ scripts\cp_mp\utility\script_utility::getsharedfunc( "player", "isFriendly" ) ]]( attacker.team, victim ) )
        {
            if ( isdefined( objweapon.parentweapon ) )
                objweapon = objweapon.parentweapon;

            weapons = weaponfixup( objweapon, attacker );
            _id_425D52C81F1883FC = 0;
            _id_425D55C81F188A95 = 0;

            if ( isdefined( modifiers ) )
            {
                _id_425D52C81F1883FC = modifiers["mask"];
                _id_425D55C81F188A95 = modifiers["mask2"];
            }

            _id_18545210159E68C8( attacker, weapons, victim, _id_425D52C81F1883FC, _id_425D55C81F188A95, objweapon, damage, meansofdeath );
        }
    }
}

vehiclekilled( vehicle, attacker, damage, objweapon )
{
    if ( !attacker challengesenabledforplayer() )
        return;

    victim = vehicle;

    if ( isdefined( objweapon.parentweapon ) )
        objweapon = objweapon.parentweapon;

    weapons = weaponfixup( objweapon, attacker );
    meansofdeath = "MOD_UNKNOWN";
    _id_425D52C81F1883FC = 0;
    _id_425D55C81F188A95 = 0;

    if ( isdefined( attacker.modifiers ) )
    {
        _id_425D52C81F1883FC = attacker.modifiers["mask"];
        _id_425D55C81F188A95 = attacker.modifiers["mask2"];
    }

    _id_18545210159E68C8( attacker, weapons, victim, _id_425D52C81F1883FC, _id_425D55C81F188A95, objweapon, damage, meansofdeath );
}

equipmentdestroyed( inflictor, attacker, damage, damageflags, meansofdeath, objweapon, hitloc, modifiers )
{
    if ( !attacker challengesenabledforplayer() )
        return;

    victim = self;

    if ( !isplayer( attacker ) )
    {
        if ( isdefined( inflictor ) && isplayer( inflictor ) )
            attacker = inflictor;
        else
            return;
    }

    if ( !isdefined( victim.owner ) )
        return;

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "player", "isFriendly" ) )
    {
        if ( ![[ scripts\cp_mp\utility\script_utility::getsharedfunc( "player", "isFriendly" ) ]]( attacker.team, victim.owner ) )
        {
            if ( isdefined( objweapon.parentweapon ) )
                objweapon = objweapon.parentweapon;

            weapons = weaponfixup( objweapon, attacker );
            _id_425D52C81F1883FC = 0;
            _id_425D55C81F188A95 = 0;

            if ( isdefined( modifiers ) )
            {
                _id_425D52C81F1883FC = modifiers["mask"];
                _id_425D55C81F188A95 = modifiers["mask2"];
            }

            _id_18545210159E68C8( attacker, weapons, victim, _id_425D52C81F1883FC, _id_425D55C81F188A95, objweapon, damage, meansofdeath );
        }
    }
}

killstreakkilled( _id_D8061F26B5ECA018, owner, _id_168CF91A2552500C, attacker, damage, _id_D95DA0355CF4CCB4, objweapon, _id_92D090CE35588AD2 )
{
    if ( !attacker challengesenabledforplayer() )
        return;

    victim = self;

    if ( !isplayer( attacker ) )
        return;

    if ( !isdefined( victim.owner ) )
        return;

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "player", "isFriendly" ) )
    {
        if ( ![[ scripts\cp_mp\utility\script_utility::getsharedfunc( "player", "isFriendly" ) ]]( attacker.team, victim.owner ) )
        {
            if ( isdefined( objweapon.parentweapon ) )
                objweapon = objweapon.parentweapon;

            weapons = weaponfixup( objweapon, attacker );
            meansofdeath = "MOD_UNKNOWN";
            _id_425D52C81F1883FC = 0;
            _id_425D55C81F188A95 = 0;

            if ( isdefined( attacker.modifiers ) )
            {
                _id_425D52C81F1883FC = attacker.modifiers["mask"];
                _id_425D55C81F188A95 = attacker.modifiers["mask2"];
            }

            _id_18545210159E68C8( attacker, weapons, victim, _id_425D52C81F1883FC, _id_425D55C81F188A95, objweapon, damage, meansofdeath );
        }
    }
}

_id_8359CADD253F9604( player, typeid, gametype, quantity, location, _id_AB034ECAB4E86ECF )
{
    if ( !player challengesenabledforplayer() )
        return;

    _id_B2FF82EC901486E4 = getchallengegamemode( player );
    player _meth_DB073176839D77FB( "216172782113783976", [ 32, 1, 46, typeid, 31, quantity, 8, _id_B2FF82EC901486E4, 9, gametype, 72, location, 71, _id_AB034ECAB4E86ECF ] );
}

_id_B0F754C8A379154E( equipment, player )
{
    if ( !player challengesenabledforplayer() )
        return;

    _id_B2FF82EC901486E4 = getchallengegamemode( player );
    gametype = _id_17C5D7FEB226E256();
    _id_3A7747BC9807F3C0 = 0;
    _id_F275474AACD30C96 = 0;
    _id_DA28916E7827AF7C = 0;

    if ( isdefined( player._id_DA28916E7827AF7C ) )
        _id_DA28916E7827AF7C = _func_96B7FC7E35353254( player._id_DA28916E7827AF7C );

    _id_F275474AACD30C96 = tablelookup( "loot/equipment_ids.csv", 1, equipment, 0 );
    player _meth_DB073176839D77FB( "216172782113783859", [ 8, _id_B2FF82EC901486E4, 9, gametype, 32, 1, 72, _id_DA28916E7827AF7C, 76, _id_F275474AACD30C96 ] );
}

_id_B5929663421247FA( player, result, winner )
{
    if ( !player challengesenabledforplayer() )
        return;

    _id_A74FC57FB4A4D3E6 = player _id_AFF35122A61A900B( player.team );

    if ( !isdefined( _id_A74FC57FB4A4D3E6 ) )
        _id_A74FC57FB4A4D3E6 = 0;

    _id_B2FF82EC901486E4 = getchallengegamemode( player );

    if ( !istrue( level.ismp ) )
    {
        if ( isdefined( winner ) && winner == "SUCCESS" )
            result = 1;
        else if ( istrue( player.isdisconnecting ) )
        {
            if ( istrue( player.joinedinprogress ) )
                result = 5;
            else
                result = 2;
        }
        else
            result = 2;
    }

    gametype = _id_17C5D7FEB226E256();
    player _meth_DB073176839D77FB( "216172782113783839", [ 8, _id_B2FF82EC901486E4, 9, gametype, 16, result, 18, _id_A74FC57FB4A4D3E6, 5, 0 ] );
}

_id_1BA256DA09A9878A( player, lootid, _id_A0CE8000D303764C, _id_5577636292591C8B, quantity, location, _id_AB034ECAB4E86ECF, _id_B87F7FAE01CE754F, _id_E7D05247043893AD )
{
    if ( !player challengesenabledforplayer() )
        return;

    gametype = _id_17C5D7FEB226E256();
    _id_B2FF82EC901486E4 = getchallengegamemode( player );
    _id_99BD169488E48AC1 = undefined;
    typeid = undefined;

    if ( isdefined( _id_A0CE8000D303764C ) )
        _id_99BD169488E48AC1 = _func_96B7FC7E35353254( _id_A0CE8000D303764C );

    if ( isdefined( lootid ) )
        typeid = _id_C43D8B7A5461CDCE( lootid );
    else if ( isdefined( _id_5577636292591C8B ) )
        typeid = _func_96B7FC7E35353254( _id_5577636292591C8B );

    player _meth_DB073176839D77FB( "216172782113783991", [ 32, 1, 46, _id_99BD169488E48AC1, 31, quantity, 8, _id_B2FF82EC901486E4, 9, gametype, 76, lootid, 77, typeid, 90, _id_B87F7FAE01CE754F, 89, _id_E7D05247043893AD, 71, _id_AB034ECAB4E86ECF ] );
}

ondeath( inflictor, attacker, damage, damageflags, meansofdeath, objweapon, hitloc, modifiers )
{
    if ( !challengesenabledforplayer() )
        return;

    _id_B2FF82EC901486E4 = getchallengegamemode( self );
    gametype = _id_17C5D7FEB226E256();
    self _meth_DB073176839D77FB( "216172782113783974", [ 32, 1, 8, _id_B2FF82EC901486E4, 9, gametype ] );
}

_id_247BA07507F78AC2( victim, attacker )
{
    if ( !attacker challengesenabledforplayer() )
        return;

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "player", "isFriendly" ) )
    {
        if ( ![[ scripts\cp_mp\utility\script_utility::getsharedfunc( "player", "isFriendly" ) ]]( attacker.team, victim ) )
        {
            _id_B2FF82EC901486E4 = getchallengegamemode( attacker );
            _id_904C82687DDFEB02 = _id_2669878CF5A1B6BC::_id_9C331F88BE5A1478( attacker.primaryweaponobj );

            if ( !isdefined( _id_904C82687DDFEB02 ) )
                _id_904C82687DDFEB02 = 0;

            _id_E2AA32C9738D9264 = _id_5AF37CE2C176C946();
            _id_0B28608820870666 = 0;

            if ( isdefined( _id_E2AA32C9738D9264[weaponclass( attacker.primaryweaponobj )] ) )
                _id_0B28608820870666 = _id_6D40F12A09494350( _id_0B28608820870666, _id_E2AA32C9738D9264[weaponclass( attacker.primaryweaponobj )] );

            attacker _meth_DB073176839D77FB( "216172782113783833", [ 32, 1, 8, _id_B2FF82EC901486E4, 43, _id_0B28608820870666, 44, _id_904C82687DDFEB02 ] );
        }
    }
}

_id_D8F43796D36ED5BF( ref, source )
{
    if ( !challengesenabledforplayer() )
        return;

    self _meth_DB073176839D77FB( "216172782113783977", [ 32, 1 ] );
}

_id_597BC208D923A465( ref, _id_77F3CA6D2F0AAE12 )
{
    if ( !challengesenabledforplayer() )
        return;

    gametype = _id_17C5D7FEB226E256();
    _id_B2FF82EC901486E4 = getchallengegamemode( self );
    _id_3A7747BC9807F3C0 = 0;
    _id_6FB9CC872B9F6EB3 = 0;
    _id_BDBCBE6DDF9167E7 = _id_77F3CA6D2F0AAE12;
    _id_A74FC57FB4A4D3E6 = _id_AFF35122A61A900B( self.team );

    if ( !isdefined( _id_A74FC57FB4A4D3E6 ) )
        _id_A74FC57FB4A4D3E6 = 0;

    _id_6FB9CC872B9F6EB3 = _id_8CAC7E458A5FE952( ref );
    self _meth_DB073176839D77FB( "216172782113783848", [ 8, _id_B2FF82EC901486E4, 9, gametype, 11, _id_BDBCBE6DDF9167E7, 14, _id_A74FC57FB4A4D3E6, 15, _id_3A7747BC9807F3C0, 32, 1, 44, _id_6FB9CC872B9F6EB3 ] );
}

_id_BD59AA7E8CECE1AB( ref, value )
{
    if ( !challengesenabledforplayer() )
        return;

    _id_D647223842F24DA0 = ref;
    _id_C0D251F100091822 = 0;
    amount = value;
    self _meth_DB073176839D77FB( "216172782113783983", [ 32, 1, 46, _id_D647223842F24DA0, 31, amount ] );
}

oncapture( modifiers )
{
    if ( !challengesenabledforplayer() )
        return;

    _id_425D52C81F1883FC = 0;
    _id_425D55C81F188A95 = 0;

    if ( isdefined( modifiers ) )
    {
        _id_425D52C81F1883FC = modifiers["mask"];
        _id_425D55C81F188A95 = modifiers["mask2"];
    }

    gametype = _id_17C5D7FEB226E256();
    _id_B6217B906C6BE73E = getoperators();
    self reportchallengeuserevent( "capture", gametype, _id_425D52C81F1883FC, _id_425D55C81F188A95, _id_B6217B906C6BE73E );
}

ondefuse( modifiers )
{
    if ( !challengesenabledforplayer() )
        return;

    _id_425D52C81F1883FC = 0;
    _id_425D55C81F188A95 = 0;

    if ( isdefined( modifiers ) )
    {
        _id_425D52C81F1883FC = modifiers["mask"];
        _id_425D55C81F188A95 = modifiers["mask2"];
    }

    gametype = _id_17C5D7FEB226E256();
    _id_B6217B906C6BE73E = getoperators();
    self reportchallengeuserevent( "defuse", gametype, _id_425D52C81F1883FC, _id_425D55C81F188A95, _id_B6217B906C6BE73E );
}

onplant( modifiers )
{
    if ( !challengesenabledforplayer() )
        return;

    _id_425D52C81F1883FC = 0;
    _id_425D55C81F188A95 = 0;

    if ( isdefined( modifiers ) )
    {
        _id_425D52C81F1883FC = modifiers["mask"];
        _id_425D55C81F188A95 = modifiers["mask2"];
    }

    gametype = _id_17C5D7FEB226E256();
    _id_B6217B906C6BE73E = getoperators();
    self reportchallengeuserevent( "defuse", gametype, _id_425D52C81F1883FC, _id_425D55C81F188A95, _id_B6217B906C6BE73E );
}

onstun( equipment )
{
    if ( !challengesenabledforplayer() )
        return;

    self reportchallengeuserevent( "stun", equipment );
}

onstim( _id_6C53F7D5FC456351 )
{
    if ( !challengesenabledforplayer() )
        return;

    self reportchallengeuserevent( "stim", _id_6C53F7D5FC456351 );
}

onhack( equipment )
{
    if ( !challengesenabledforplayer() )
        return;

    _id_D064B7165A057B5D = findloadoutperks( self );
    self reportchallengeuserevent( "hack", equipment, _id_D064B7165A057B5D );
}

gettouchinglocaletriggers( attacker, victim )
{
    _id_750C94BA41F40A47 = "";

    if ( !isdefined( level.localetriggers ) )
        return _id_750C94BA41F40A47;

    found = 0;

    foreach ( trigger in level.localetriggers )
    {
        if ( attacker istouching( trigger ) || isdefined( victim ) && victim istouching( trigger ) )
        {
            if ( isdefined( trigger.localeid ) )
            {
                if ( found )
                    _id_750C94BA41F40A47 = _id_750C94BA41F40A47 + "|";

                _id_750C94BA41F40A47 = _id_750C94BA41F40A47 + trigger.localeid;
                found = 1;
            }
        }
    }

    return _id_750C94BA41F40A47;
}

gettouchingspraylocaletriggers( player )
{
    if ( !isdefined( level.localetriggers ) )
        return -1;

    foreach ( trigger in level.localetriggers )
    {
        if ( player istouching( trigger ) )
        {
            _id_8F194056385AE0A7 = isdefined( trigger.sprayid ) && trigger.sprayid > -1;
            _id_50BA7204DAA28034 = isdefined( player.sprayed ) && player.sprayed & 1 << trigger.sprayid;

            if ( _id_8F194056385AE0A7 && !_id_50BA7204DAA28034 )
            {
                if ( !isdefined( player.sprayed ) )
                    player.sprayed = 0;

                player.sprayed = player.sprayed | 1 << trigger.sprayid;
                return trigger.sprayid;
            }
        }
    }

    return -1;
}

oncontractstart( category, _id_A705A5A5884EBF9C )
{
    if ( !challengesenabledforplayer() )
        return;

    self reportchallengeuserevent( "contract_start", gettouchinglocaletriggers( self, undefined ), gettouchinglocaletriggers( _id_A705A5A5884EBF9C, undefined ), getoperators(), category );
}

oncontractend( category, result, _id_3990250B5DB8804E )
{
    if ( !challengesenabledforplayer() )
        return;

    self reportchallengeuserevent( "contract_end", category, result, isalive( self ), _id_3990250B5DB8804E, getoperators() );
}

oncacheopen()
{
    if ( !challengesenabledforplayer() )
        return;

    self reportchallengeuserevent( "pickup", 0, 0, 1, getoperators() );
}

_id_E74D9A84C3B4AAB1( _id_7E1BFBE3F25F5583, _id_CB325DDB4A764623, lootid, quantity, _id_B87F7FAE01CE754F, location, _id_E7D05247043893AD )
{
    if ( !challengesenabledforplayer() )
        return;

    _id_1BA256DA09A9878A( self, lootid, _id_CB325DDB4A764623, _id_7E1BFBE3F25F5583, quantity, location, 0, _id_B87F7FAE01CE754F, _id_E7D05247043893AD );

    if ( _id_5C7E8BCDC167FD84() && scripts\cp_mp\utility\script_utility::issharedfuncdefined( "game", "getTeamData" ) )
    {
        func = scripts\cp_mp\utility\script_utility::getsharedfunc( "game", "getTeamData" );
        players = [[ func ]]( self.team, "players" );

        foreach ( _id_736D8D9188CCBD45 in players )
        {
            if ( _id_736D8D9188CCBD45 != self )
                _id_1BA256DA09A9878A( _id_736D8D9188CCBD45, lootid, _id_CB325DDB4A764623, _id_7E1BFBE3F25F5583, quantity, location, 1, _id_B87F7FAE01CE754F, _id_E7D05247043893AD );
        }
    }
}

onkioskpurchaseitem( _id_7E1BFBE3F25F5583, _id_CB325DDB4A764623, lootid, quantity, _id_B87F7FAE01CE754F, location )
{
    _id_707BC435F8518B62 = _id_6D40F12A09494350( 0, 0 );
    _id_E74D9A84C3B4AAB1( _id_7E1BFBE3F25F5583, _id_CB325DDB4A764623, lootid, quantity, _id_B87F7FAE01CE754F, location, _id_707BC435F8518B62 );
}

_id_EA50038423FC4CFC( _id_7E1BFBE3F25F5583, _id_CB325DDB4A764623, lootid, quantity, _id_B87F7FAE01CE754F, location )
{
    _id_707BC435F8518B62 = _id_6D40F12A09494350( 0, 1 );
    _id_E74D9A84C3B4AAB1( _id_7E1BFBE3F25F5583, _id_CB325DDB4A764623, lootid, quantity, _id_B87F7FAE01CE754F, location, _id_707BC435F8518B62 );
}

onpickupitem( _id_7E1BFBE3F25F5583 )
{
    if ( !challengesenabledforplayer() )
        return;

    _id_A700F4673C85C915 = 0;
    _id_455145ACF02E9F8D = 0;

    if ( _id_7E1BFBE3F25F5583 == "weapon" )
        _id_A700F4673C85C915 = 1;
    else if ( _id_7E1BFBE3F25F5583 == "plunder" )
        _id_455145ACF02E9F8D = 1;

    self reportchallengeuserevent( "pickup", _id_A700F4673C85C915, _id_455145ACF02E9F8D, 0, getoperators() );
}

oncollectitem( _id_7E1BFBE3F25F5583 )
{
    if ( !challengesenabledforplayer() )
        return;

    self reportchallengeuserevent( "collect_item", _id_7E1BFBE3F25F5583, getoperators() );
}

onuseitem( _id_CB325DDB4A764623 )
{
    if ( !challengesenabledforplayer() )
        return;

    self reportchallengeuserevent( "use_item", _id_CB325DDB4A764623, getoperators() );
}

onunlockitem( _id_443F88E60A6C1697 )
{
    if ( !challengesenabledforplayer() )
        return;

    self reportchallengeuserevent( "collect_item", _id_443F88E60A6C1697 );
}

onloadout( _id_8691AF1F100B771F )
{
    if ( !challengesenabledforplayer() )
        return;

    self reportchallengeuserevent( "loadout", _id_8691AF1F100B771F, getoperators() );
}

onping( _id_A1823E6B1CB4B46D )
{
    if ( !challengesenabledforplayer() )
        return;

    self reportchallengeuserevent( "ping", _id_A1823E6B1CB4B46D, getoperators() );
}

onlaststandrevive( reviver, _id_22F7E3F7E360775B )
{
    if ( reviver == _id_22F7E3F7E360775B )
    {
        if ( reviver challengesenabledforplayer() )
            reviver reportchallengeuserevent( "revive", 1, 1, reviver getoperators() );
    }
    else
    {
        if ( reviver challengesenabledforplayer() )
            reviver reportchallengeuserevent( "revive", 1, 0, reviver getoperators() );

        if ( _id_22F7E3F7E360775B challengesenabledforplayer() )
            _id_22F7E3F7E360775B reportchallengeuserevent( "revive", 0, 1, reviver getoperators() );
    }
}

ongulagendmatch( result )
{
    if ( !challengesenabledforplayer() )
        return;

    self reportchallengeuserevent( "gulag_end_match", result, getoperators() );
}

onmatchplacement( placement )
{
    if ( !challengesenabledforplayer() )
        return;

    gametype = _id_17C5D7FEB226E256();
    self reportchallengeuserevent( "match_placement", gametype, placement, getoperators() );
}

onspray()
{
    if ( !challengesenabledforplayer() )
        return;

    locale = gettouchingspraylocaletriggers( self );

    if ( locale != -1 )
        self reportchallengeuserevent( "spray", locale, getoperators() );
}

weaponfixup( objweapon, attacker )
{
    weaponname = undefined;

    switch ( objweapon.basename )
    {
        case "pac_sentry_turret_mp":
        case "tur_gun_little_bird_left_mp":
        case "tur_gun_little_bird_right_mp":
        case "tur_gun_cargo_truck_mp":
        case "bradley_tow_proj_mp":
        case "iw9_mg_light_tank_mp":
        case "iw9_tur_light_tank_mp":
            weaponname = "iav_weapon_mp";
            break;
        case "little_bird_mp":
            weaponname = "little_bird_mp";
            break;
        case "iw9_tur_apc_russian_mp":
            weaponname = "iw9_tur_apc_russian_mp";
            break;
        default:
            weaponname = undefined;
            break;
    }

    if ( !isdefined( weaponname ) )
    {
        weaponname = "";

        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "equipment", "getEquipmentRefFromWeapon" ) )
            weaponname = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "equipment", "getEquipmentRefFromWeapon" ) ]]( objweapon );

        if ( !isdefined( weaponname ) )
        {
            if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "weapons", "getDefaultWeaponBaseName" ) )
                weaponname = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "weapons", "getDefaultWeaponBaseName" ) ]]( objweapon.basename );
        }

        if ( weaponname == "equip_throwing_knife_fire" || weaponname == "equip_throwing_knife_electric" )
            weaponname = "equip_throwing_knife";
    }

    _id_6747B178B5FC3B95 = "";

    if ( isdefined( attacker.secondaryweaponobj ) )
    {
        if ( isdefined( attacker.primaryweaponobj ) && objweapon == attacker.primaryweaponobj )
        {
            if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "weapons", "getDefaultWeaponBaseName" ) )
                _id_6747B178B5FC3B95 = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "weapons", "getDefaultWeaponBaseName" ) ]]( attacker.secondaryweaponobj.basename );
        }
        else if ( objweapon == attacker.secondaryweaponobj )
        {
            if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "weapons", "getDefaultWeaponBaseName" ) )
                _id_6747B178B5FC3B95 = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "weapons", "getDefaultWeaponBaseName" ) ]]( attacker.primaryweaponobj.basename );
        }
    }

    weapons = [ weaponname, _id_6747B178B5FC3B95 ];
    return weapons;
}

_id_4CCE10CD99177322( objweapon )
{
    if ( !isdefined( objweapon ) )
        return;

    if ( issubstr( objweapon.basename, "iw9_br_" ) )
        return "battle";

    if ( issubstr( objweapon.basename, "iw9_dm_" ) )
        return "marksman";
}

_id_6D40F12A09494350( _id_3A7747BC9807F3C0, _id_B5C99E03C0C2DC5C )
{
    _id_D6AA36F351AB5F24 = 0;

    if ( _id_B5C99E03C0C2DC5C > 30 || isstring( _id_3A7747BC9807F3C0 ) )
        _id_D6AA36F351AB5F24 = _func_1DB72F37B2E59440( _id_3A7747BC9807F3C0 + "", _id_B5C99E03C0C2DC5C );
    else
        _id_D6AA36F351AB5F24 = _id_3A7747BC9807F3C0 + ( 1 << _id_B5C99E03C0C2DC5C );

    return _id_D6AA36F351AB5F24;
}

getchallengegamemode( player )
{
    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "game", "isBRStyleGameType" ) )
    {
        if ( [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "game", "isBRStyleGameType" ) ]]() )
            return 8;
    }

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "game", "getGameType" ) )
    {
        gametype = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "game", "getGameType" ) ]]();

        if ( isdefined( gametype ) )
        {
            if ( gametype == "brtdm" )
                return 8;
            else if ( scripts\common\utility::iscp() )
                return 4;
            else if ( scripts\common\utility::issp() )
                return 1;
            else
                return 2;
        }
    }

    return 0;
}

_id_8CAC7E458A5FE952( ref )
{
    if ( !isdefined( ref ) )
        return -1;

    id = 0;
    return id;
}

_id_DCE01BAE4A0A91EC( ref )
{
    if ( !isdefined( ref ) )
        return 0;

    lootid = tablelookup( "loot/super_ids.csv", 1, ref, 0 );

    if ( lootid == "" )
        lootid = 0;

    return lootid;
}

_id_AFF35122A61A900B( team )
{
    if ( isdefined( team ) && scripts\cp_mp\utility\script_utility::issharedfuncdefined( "player", "lookupCurrentOperator" ) )
    {
        operatorref = self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "player", "lookupCurrentOperator" ) ]]( team );
        lootid = _id_600B944A95C3A7BF::_id_A50B607D2500DDA5( operatorref, "operator" );

        if ( !isdefined( lootid ) || lootid < 0 )
            return 0;

        return lootid;
    }

    return 0;
}

_id_91C050618938C83E( modifiers, meansofdeath )
{
    switch ( meansofdeath )
    {
        case "MOD_FIRE":
            modifiers = _id_6D40F12A09494350( modifiers, 29 );
            break;
        case "MOD_IMPACT":
            modifiers = _id_6D40F12A09494350( modifiers, 28 );
            break;
        case "MOD_CRUSH":
            modifiers = _id_6D40F12A09494350( modifiers, 47 );
            break;
        default:
            break;
    }

    return modifiers;
}

_id_261CFB5C8119EA2B( _id_576499139629F6FA )
{
    if ( !isdefined( _id_576499139629F6FA ) )
        return 0;

    if ( !isdefined( level.challengeandeventglobals.game_type_col ) || !isdefined( level.challengeandeventglobals.game_type_col[_id_576499139629F6FA] ) )
        return 0;

    if ( !getdvarint( "dvar_78653010D584AA6E" ) )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "game", "isBRStyleGameType" ) )
        {
            if ( [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "game", "isBRStyleGameType" ) ]]() )
            {
                if ( isdefined( level.brgametype ) && isdefined( level.brgametype.name ) )
                {
                    switch ( level.brgametype.name )
                    {
                        case "plunder":
                            return 99;
                        case "extract":
                            return 98;
                        case "evac":
                            return 97;
                        case "sandbox":
                            return 96;
                        case "exgm":
                        case "dmz":
                            return 95;
                        case "":
                            break;
                        default:
                            break;
                    }
                }
            }
        }
    }

    return level.challengeandeventglobals.game_type_col[_id_576499139629F6FA];
}

_id_17C5D7FEB226E256()
{
    if ( !getdvarint( "dvar_78653010D584AA6E" ) )
    {
        gametype = undefined;

        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "game", "getGameType" ) )
            gametype = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "game", "getGameType" ) ]]();

        if ( !isdefined( gametype ) )
            gametype = getdvar( "dvar_8FE3271CD74F65A2" );

        _id_E37D5A134143CC83 = _id_261CFB5C8119EA2B( gametype );
        return _id_E37D5A134143CC83;
    }

    return _id_261CFB5C8119EA2B( level._id_62F6F7640E4431E3._id_D20ACAD05758F0D8 );
}

_id_5AF37CE2C176C946()
{
    if ( !isdefined( level._id_E2AA32C9738D9264 ) )
    {
        level._id_E2AA32C9738D9264 = spawnstruct();
        level._id_E2AA32C9738D9264._id_92F35FCFAE58B4EB = [];
        level._id_E2AA32C9738D9264._id_92F35FCFAE58B4EB["none"] = 0;
        level._id_E2AA32C9738D9264._id_92F35FCFAE58B4EB["sniper"] = 1;
        level._id_E2AA32C9738D9264._id_92F35FCFAE58B4EB["mg"] = 2;
        level._id_E2AA32C9738D9264._id_92F35FCFAE58B4EB["smg"] = 3;
        level._id_E2AA32C9738D9264._id_92F35FCFAE58B4EB["spread"] = 4;
        level._id_E2AA32C9738D9264._id_92F35FCFAE58B4EB["pistol"] = 5;
        level._id_E2AA32C9738D9264._id_92F35FCFAE58B4EB["grenade"] = 6;
        level._id_E2AA32C9738D9264._id_92F35FCFAE58B4EB["rocketlauncher"] = 7;
        level._id_E2AA32C9738D9264._id_92F35FCFAE58B4EB["turret"] = 8;
        level._id_E2AA32C9738D9264._id_92F35FCFAE58B4EB["throwingknife"] = 9;
        level._id_E2AA32C9738D9264._id_92F35FCFAE58B4EB["non-player"] = 10;
        level._id_E2AA32C9738D9264._id_92F35FCFAE58B4EB["item"] = 11;
        level._id_E2AA32C9738D9264._id_92F35FCFAE58B4EB["beam"] = 12;
        level._id_E2AA32C9738D9264._id_92F35FCFAE58B4EB["ball"] = 13;
        level._id_E2AA32C9738D9264._id_92F35FCFAE58B4EB["rifle"] = 14;
        level._id_E2AA32C9738D9264._id_92F35FCFAE58B4EB["battle"] = 15;
        level._id_E2AA32C9738D9264._id_92F35FCFAE58B4EB["marksman"] = 16;
    }

    return level._id_E2AA32C9738D9264._id_92F35FCFAE58B4EB;
}

_id_D6973792FD45B035()
{
    _id_E4F4A057080C0ED5 = [];
    _id_E4F4A057080C0ED5["specialty_survivor"] = 0;
    _id_E4F4A057080C0ED5["specialty_extra_tactical"] = 1;
    _id_E4F4A057080C0ED5["specialty_overwatch"] = 2;
    _id_E4F4A057080C0ED5["specialty_grenade_expert"] = 14;
    _id_E4F4A057080C0ED5["specialty_eod"] = 15;
    _id_E4F4A057080C0ED5["specialty_focus"] = 3;
    _id_E4F4A057080C0ED5["specialty_restock"] = 16;
    _id_E4F4A057080C0ED5["specialty_overcharge_field_upgrade"] = 4;
    _id_E4F4A057080C0ED5["specialty_warhead"] = 5;
    _id_E4F4A057080C0ED5["specialty_munitions_2"] = 6;
    _id_E4F4A057080C0ED5["specialty_scavenger_plus"] = 7;
    _id_E4F4A057080C0ED5["specialty_guerrilla"] = 8;
    _id_E4F4A057080C0ED5["specialty_hardline"] = 9;
    _id_E4F4A057080C0ED5["specialty_huntmaster"] = 10;
    _id_E4F4A057080C0ED5["specialty_tactical_recon"] = 11;
    _id_E4F4A057080C0ED5["specialty_hustle"] = 12;
    _id_E4F4A057080C0ED5["specialty_covert_ops"] = 13;
    _id_E4F4A057080C0ED5["specialty_tac_resist"] = 17;
    _id_E4F4A057080C0ED5["specialty_surveillance"] = 18;
    _id_E4F4A057080C0ED5["specialty_quick_fix"] = 19;
    _id_E4F4A057080C0ED5["specialty_null"] = 20;
    _id_E4F4A057080C0ED5[""] = 20;
    return _id_E4F4A057080C0ED5;
}

_id_18545210159E68C8( attacker, weapons, victim, _id_425D52C81F1883FC, _id_425D55C81F188A95, objweapon, damage, meansofdeath )
{
    gametype = _id_17C5D7FEB226E256();
    _id_D064B7165A057B5D = findloadoutperks( attacker );
    _id_E4F4A057080C0ED5 = _id_D6973792FD45B035();
    _id_7FB63B7FAC6D1698 = 0;

    foreach ( perk in _id_D064B7165A057B5D )
    {
        if ( isdefined( _id_E4F4A057080C0ED5[perk] ) )
            _id_7FB63B7FAC6D1698 = _id_6D40F12A09494350( _id_7FB63B7FAC6D1698, _id_E4F4A057080C0ED5[perk] );
    }

    _id_B5EEC3B49CF346D2 = [ damage, 0 ];
    _id_C5B28F88D9B3BFD7 = findenemytype( victim );
    _id_A5958DC7369199C7 = "none";

    if ( isdefined( attacker.super ) && isdefined( attacker.super.staticdata ) && isdefined( attacker.super.staticdata.ref ) )
    {
        if ( attacker.super.isactive )
            _id_A5958DC7369199C7 = attacker.super.staticdata.ref;
    }

    _id_C0D251F100091822 = _id_DCE01BAE4A0A91EC( _id_A5958DC7369199C7 );
    _id_F5A39828804902E2 = 65535;

    if ( isdefined( level.br_circle ) && isdefined( level.br_circle.circleindex ) )
        _id_F5A39828804902E2 = level.br_circle.circleindex;

    _id_B1418E4D5B883FA1 = 65535;

    if ( isdefined( level.br_pickups ) && isdefined( level.br_pickups.br_weapontoscriptable ) && isdefined( level.br_pickups.br_itemrarity ) )
    {
        _id_A0CB84D50AFAAB7D = getcompleteweaponname( objweapon );
        itemname = level.br_pickups.br_weapontoscriptable[_id_A0CB84D50AFAAB7D];

        if ( isdefined( itemname ) )
            _id_B1418E4D5B883FA1 = level.br_pickups.br_itemrarity[itemname];
    }

    if ( weapons[0] == "iav_weapon_mp" || weapons[0] == "iw9_tur_apc_russian_mp" )
        meansofdeath = "MOD_CRUSH";

    _id_B2FF82EC901486E4 = getchallengegamemode( attacker );
    _id_A74FC57FB4A4D3E6 = attacker _id_AFF35122A61A900B( attacker.team );

    if ( !isdefined( _id_A74FC57FB4A4D3E6 ) )
        _id_A74FC57FB4A4D3E6 = 0;

    _id_904C82687DDFEB02 = _id_2669878CF5A1B6BC::_id_9C331F88BE5A1478( objweapon );

    if ( !isdefined( _id_904C82687DDFEB02 ) )
        _id_904C82687DDFEB02 = 0;

    _id_9EEB614F9AEE06B3 = 0;
    _id_E2AA32C9738D9264 = _id_5AF37CE2C176C946();
    _id_0B28608820870666 = 0;
    _id_5DDEFDD1D9333B9D = _id_4CCE10CD99177322( objweapon );
    iskillstreak = 0;

    if ( _id_2669878CF5A1B6BC::iskillstreakweapon( objweapon ) )
        iskillstreak = 1;

    if ( !iskillstreak )
    {
        if ( isdefined( _id_E2AA32C9738D9264[weaponclass( objweapon )] ) && !isdefined( _id_5DDEFDD1D9333B9D ) )
            _id_0B28608820870666 = _id_6D40F12A09494350( _id_0B28608820870666, _id_E2AA32C9738D9264[weaponclass( objweapon )] );
        else if ( isdefined( _id_5DDEFDD1D9333B9D ) )
            _id_0B28608820870666 = _id_6D40F12A09494350( _id_0B28608820870666, _id_E2AA32C9738D9264[_id_5DDEFDD1D9333B9D] );
    }

    isequipment = 0;
    _id_F275474AACD30C96 = 0;

    if ( _id_904C82687DDFEB02 == 0 )
    {
        _id_F275474AACD30C96 = tablelookup( "loot/equipment_ids.csv", 1, weapons[0], 0 );

        if ( _id_F275474AACD30C96 != 0 )
            isequipment = 1;
    }

    if ( isequipment )
        _id_904C82687DDFEB02 = _id_F275474AACD30C96;

    _id_DA28916E7827AF7C = 0;

    if ( isdefined( attacker._id_DA28916E7827AF7C ) )
        _id_DA28916E7827AF7C = _func_96B7FC7E35353254( attacker._id_DA28916E7827AF7C );

    attacker _meth_DB073176839D77FB( "216172782113783847", [ 8, _id_B2FF82EC901486E4, 14, _id_A74FC57FB4A4D3E6, 44, _id_904C82687DDFEB02, 9, gametype, 32, 1, 43, _id_0B28608820870666, 12, _id_425D52C81F1883FC, 13, _id_C5B28F88D9B3BFD7, 72, _id_DA28916E7827AF7C, 81, _id_7FB63B7FAC6D1698, 76, _id_C0D251F100091822 ] );

    if ( _id_5C7E8BCDC167FD84() )
    {
        if ( isdefined( attacker.team ) && scripts\cp_mp\utility\script_utility::issharedfuncdefined( "game", "getTeamData" ) )
        {
            players = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "game", "getTeamData" ) ]]( attacker.team, "players" );

            foreach ( player in players )
            {
                if ( attacker != player )
                    player _meth_DB073176839D77FB( "216172782113783847", [ 8, _id_B2FF82EC901486E4, 14, _id_A74FC57FB4A4D3E6, 44, _id_904C82687DDFEB02, 9, gametype, 32, 1, 43, _id_0B28608820870666, 12, _id_425D52C81F1883FC, 13, _id_C5B28F88D9B3BFD7, 72, _id_DA28916E7827AF7C, 71, 1 ] );
            }
        }
    }
}

_id_C43D8B7A5461CDCE( lootid )
{
    ref = _id_600B944A95C3A7BF::_id_793E8A72CEDB8EF3( lootid );
    _id_25978461C6E4F61B = level.br_pickups._id_838863C4848D4C26[ref];

    if ( !isdefined( _id_25978461C6E4F61B ) )
        return undefined;

    itemtype = level.br_pickups.br_itemtype[_id_25978461C6E4F61B];

    switch ( itemtype )
    {
        case "ammo":
            return 3;
        case "gear":
            return 4;
        case "health":
            return 6;
        case "revive":
            return 8;
        case "lethal":
            return 12;
        case "tactical":
            return 13;
        case "killstreak":
            return 11;
        case "super":
            return 19;
        case "weapon":
            return 1;
        case "plunder":
            return 7;
        case "attachment":
            return 18;
        case "plate_carrier":
            return 5;
        case "keycard":
            return 9;
        case "key":
            return 10;
        case "valuable":
            return 14;
        case "personal":
            return 15;
        case "dogtag":
            return 16;
        case "engram":
            return 17;
        default:
            return undefined;
    }
}

_id_D24138B32084FC3E( player, lootid, type, _id_3EAA9F644DBE7834, quantity, source )
{
    if ( !player challengesenabledforplayer() )
        return;

    _id_B2FF82EC901486E4 = getchallengegamemode( player );
    gametype = _id_17C5D7FEB226E256();
    typeid = undefined;

    if ( isdefined( type ) )
        typeid = _func_96B7FC7E35353254( type );

    _id_5577636292591C8B = undefined;

    if ( isdefined( lootid ) )
        _id_5577636292591C8B = _id_C43D8B7A5461CDCE( lootid );

    _id_DA28916E7827AF7C = 0;

    if ( isdefined( player._id_DA28916E7827AF7C ) )
        _id_DA28916E7827AF7C = _func_96B7FC7E35353254( player._id_DA28916E7827AF7C );

    player _meth_DB073176839D77FB( "216172782113784021", [ 32, 1, 46, typeid, 31, quantity, 8, _id_B2FF82EC901486E4, 9, gametype, 72, _id_DA28916E7827AF7C, 76, lootid, 78, _id_3EAA9F644DBE7834, 77, _id_5577636292591C8B, 91, source ] );

    if ( _id_5C7E8BCDC167FD84() )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "game", "getTeamData" ) )
        {
            players = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "game", "getTeamData" ) ]]( player.team, "players" );

            foreach ( _id_736D8D9188CCBD45 in players )
            {
                if ( _id_736D8D9188CCBD45 != player )
                {
                    _id_B2FF82EC901486E4 = getchallengegamemode( _id_736D8D9188CCBD45 );
                    _id_736D8D9188CCBD45 _meth_DB073176839D77FB( "216172782113784021", [ 32, 1, 46, typeid, 31, quantity, 8, _id_B2FF82EC901486E4, 9, gametype, 72, _id_DA28916E7827AF7C, 76, lootid, 78, _id_3EAA9F644DBE7834, 77, _id_5577636292591C8B, 71, 1 ] );
                }
            }
        }
    }
}

findgunsmithattachments( objweapon )
{
    _id_349E390338192305 = [];

    if ( !scripts\cp_mp\utility\script_utility::issharedfuncdefined( "weapons", "isCACPrimaryOrSecondary" ) || [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "weapons", "isCACPrimaryOrSecondary" ) ]]( objweapon ) )
    {
        if ( isdefined( objweapon.attachments ) )
        {
            _id_49E6EF3EDADD524E = _id_2669878CF5A1B6BC::getweaponrootname( objweapon );
            _id_7208E21EA18240FB = 0;

            foreach ( attachment in objweapon.attachments )
            {
                if ( issubstr( attachment, "snprscope" ) )
                    _id_7208E21EA18240FB = 1;

                if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "weapons", "attachmentIsSelectable" ) )
                {
                    if ( [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "weapons", "attachmentIsSelectable" ) ]]( objweapon, attachment ) )
                        _id_349E390338192305[_id_349E390338192305.size] = _id_2669878CF5A1B6BC::_id_693E108CB61CEEB5( _id_49E6EF3EDADD524E, attachment );
                }
            }

            if ( _id_7208E21EA18240FB )
                _id_349E390338192305[_id_349E390338192305.size] = _id_2669878CF5A1B6BC::_id_693E108CB61CEEB5( _id_49E6EF3EDADD524E, "default_sniper_scope" );
        }
    }

    for ( _id_40E4B9C48B36C9EC = _id_349E390338192305.size; _id_40E4B9C48B36C9EC < 10; _id_40E4B9C48B36C9EC++ )
        _id_349E390338192305[_id_40E4B9C48B36C9EC] = 0;

    return _id_349E390338192305;
}

findloadoutperks( attacker )
{
    _id_D064B7165A057B5D = [];

    if ( isdefined( attacker.classstruct ) && isdefined( attacker.classstruct.loadoutperks ) )
    {
        foreach ( perk in attacker.classstruct.loadoutperks )
            _id_D064B7165A057B5D = scripts\engine\utility::array_add( _id_D064B7165A057B5D, perk );
    }

    if ( isdefined( attacker.classstruct._id_15F3E6DF722FB1CF ) )
        _id_D064B7165A057B5D = scripts\engine\utility::array_add( _id_D064B7165A057B5D, attacker.classstruct._id_15F3E6DF722FB1CF );

    if ( isdefined( attacker.classstruct._id_15F3E5DF722FAF9C ) )
        _id_D064B7165A057B5D = scripts\engine\utility::array_add( _id_D064B7165A057B5D, attacker.classstruct._id_15F3E5DF722FAF9C );

    return _id_D064B7165A057B5D;
}

findenemytype( victim )
{
    _id_C5B28F88D9B3BFD7 = 0;

    if ( isplayer( victim ) )
        _id_C5B28F88D9B3BFD7 = _id_6D40F12A09494350( _id_C5B28F88D9B3BFD7, 0 );

    _id_4C20E5ABF3CE9872 = 0;
    _id_AE8EB6D66C120397 = 0;
    _id_B786822D9A87AB34 = 0;
    _id_B93834C5C289DCDC = 0;

    if ( isdefined( victim.streakinfo ) )
    {
        _id_C5B28F88D9B3BFD7 = _id_6D40F12A09494350( _id_C5B28F88D9B3BFD7, 1 );
        _id_D8061F26B5ECA018 = victim.streakinfo.streakname;
        _id_B93834C5C289DCDC = iskillstreakvehicle( _id_D8061F26B5ECA018 );

        switch ( _id_D8061F26B5ECA018 )
        {
            case "sentry_gun":
            case "pac_sentry":
            case "manual_turret":
            case "bradley":
            case "juggernaut":
                _id_4C20E5ABF3CE9872 = 1;
                break;
            case "white_phosphorus":
            case "toma_strike":
            case "precision_airstrike":
            case "hover_jet":
            case "gunship":
            case "cruise_predator":
            case "chopper_support":
            case "chopper_gunner":
            case "nuke":
                _id_AE8EB6D66C120397 = 1;
                break;
            case "directional_uav":
            case "radar_drone_overwatch":
            case "scrambler_drone_guard":
            case "uav":
                _id_AE8EB6D66C120397 = 1;
                _id_B786822D9A87AB34 = 1;
                break;
            case "airdrop_multiple":
            case "airdrop":
                _id_B786822D9A87AB34 = 1;
                break;
        }

        if ( _id_4C20E5ABF3CE9872 )
            _id_C5B28F88D9B3BFD7 = _id_6D40F12A09494350( _id_C5B28F88D9B3BFD7, 4 );

        if ( _id_AE8EB6D66C120397 )
            _id_C5B28F88D9B3BFD7 = _id_6D40F12A09494350( _id_C5B28F88D9B3BFD7, 3 );

        if ( _id_B786822D9A87AB34 )
            _id_C5B28F88D9B3BFD7 = _id_6D40F12A09494350( _id_C5B28F88D9B3BFD7, 5 );
    }

    if ( isdefined( victim.vehiclename ) || _id_B93834C5C289DCDC )
    {
        _id_C5B28F88D9B3BFD7 = _id_6D40F12A09494350( _id_C5B28F88D9B3BFD7, 6 );

        if ( !_id_4C20E5ABF3CE9872 && isdefined( victim.vehiclename ) && !istrue( victim scripts\cp_mp\vehicles\vehicle::vehiclecanfly() ) )
            _id_C5B28F88D9B3BFD7 = _id_6D40F12A09494350( _id_C5B28F88D9B3BFD7, 4 );

        if ( !_id_AE8EB6D66C120397 && isdefined( victim.vehiclename ) && istrue( victim scripts\cp_mp\vehicles\vehicle::vehiclecanfly() ) )
            _id_C5B28F88D9B3BFD7 = _id_6D40F12A09494350( _id_C5B28F88D9B3BFD7, 3 );
    }

    if ( isdefined( victim.equipmentref ) )
        _id_C5B28F88D9B3BFD7 = _id_6D40F12A09494350( _id_C5B28F88D9B3BFD7, 7 );

    if ( isagent( victim ) )
    {
        if ( isdefined( victim.aitype ) )
            _id_C5B28F88D9B3BFD7 = return_enemy_type_mask( _id_C5B28F88D9B3BFD7, victim );
        else if ( isdefined( victim.agent_type ) )
            _id_C5B28F88D9B3BFD7 = _id_0E9DC49603AC403D( _id_C5B28F88D9B3BFD7, victim );
    }

    return _id_C5B28F88D9B3BFD7;
}

_id_0E9DC49603AC403D( _id_C5B28F88D9B3BFD7, victim )
{
    if ( issubstr( victim.agent_type, "civilian" ) )
        _id_C5B28F88D9B3BFD7 = _id_6D40F12A09494350( _id_C5B28F88D9B3BFD7, 13 );
    else
    {
        _id_C5B28F88D9B3BFD7 = _id_6D40F12A09494350( _id_C5B28F88D9B3BFD7, 14 );

        if ( issubstr( victim.agent_type, "jugg" ) )
            _id_C5B28F88D9B3BFD7 = _id_6D40F12A09494350( _id_C5B28F88D9B3BFD7, 8 );
        else if ( issubstr( victim.agent_type, "riotshield" ) )
            _id_C5B28F88D9B3BFD7 = _id_6D40F12A09494350( _id_C5B28F88D9B3BFD7, 9 );
        else
            _id_C5B28F88D9B3BFD7 = _id_6D40F12A09494350( _id_C5B28F88D9B3BFD7, 12 );

        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "ai_mp_controller", "agentPers_getAgentPersData" ) )
        {
            if ( istrue( [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "ai_mp_controller", "agentPers_getAgentPersData" ) ]]( victim, "elite" ) ) )
                _id_C5B28F88D9B3BFD7 = _id_6D40F12A09494350( _id_C5B28F88D9B3BFD7, 11 );

            tier = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "ai_mp_controller", "agentPers_getAgentPersData" ) ]]( victim, "tier" );

            if ( isdefined( tier ) )
            {
                if ( tier == 1 )
                    _id_C5B28F88D9B3BFD7 = _id_6D40F12A09494350( _id_C5B28F88D9B3BFD7, 15 );
                else if ( tier == 2 )
                    _id_C5B28F88D9B3BFD7 = _id_6D40F12A09494350( _id_C5B28F88D9B3BFD7, 16 );
                else
                    _id_C5B28F88D9B3BFD7 = _id_6D40F12A09494350( _id_C5B28F88D9B3BFD7, 17 );
            }
        }
    }

    return _id_C5B28F88D9B3BFD7;
}

return_enemy_type_mask( _id_C5B28F88D9B3BFD7, victim )
{
    if ( !isdefined( victim.aitype ) )
        return _id_C5B28F88D9B3BFD7;

    switch ( victim.aitype )
    {
        case "soldier":
            _id_C5B28F88D9B3BFD7 = _id_6D40F12A09494350( _id_C5B28F88D9B3BFD7, 12 );
            break;
        case "juggernaut":
            _id_C5B28F88D9B3BFD7 = _id_6D40F12A09494350( _id_C5B28F88D9B3BFD7, 8 );
            break;
        case "suicidebomber":
            _id_C5B28F88D9B3BFD7 = _id_6D40F12A09494350( _id_C5B28F88D9B3BFD7, 10 );
            break;
        case "riotshield":
            _id_C5B28F88D9B3BFD7 = _id_6D40F12A09494350( _id_C5B28F88D9B3BFD7, 9 );
            break;
        default:
            _id_C5B28F88D9B3BFD7 = _id_6D40F12A09494350( _id_C5B28F88D9B3BFD7, 12 );
            break;
    }

    return _id_C5B28F88D9B3BFD7;
}

onplayerteamrevive( reviver, _id_22F7E3F7E360775B )
{

}

onsuccessfulhit( objweapon )
{

}

onspawn()
{

}

updatesuperweaponkills( objweapon, inflictor )
{

}

updatesuperkills( _id_EBEC497FF8B18A45, meansofdeath, _id_B34CDA8A56DD46C5 )
{

}

resistedstun( attacker )
{

}

triggereddelayedexplosion()
{

}

minedestroyed( mine, attacker, type )
{

}

roundbegin()
{

}

roundend( _id_8415802B3CFB809B )
{

}

playerdamaged( inflictor, attacker, damage, meansofdeath, objweapon, shitloc )
{

}

processuavassist( owner, uavtype )
{

}

killstreakdamaged( _id_D8061F26B5ECA018, owner, attacker, weapon, damage )
{

}

iskillstreakvehicle( _id_D8061F26B5ECA018 )
{
    switch ( _id_D8061F26B5ECA018 )
    {
        case "cruise_predator":
        case "sentry_gun":
        case "manual_turret":
        case "juggernaut":
            return 0;
    }

    return 1;
}

processfinalkillchallenges( attacker, victim )
{

}

usedkillstreak( streakname )
{

}

getoperators()
{
    _id_B6217B906C6BE73E = [];

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "player", "lookupCurrentOperator" ) )
        _id_B6217B906C6BE73E[0] = self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "player", "lookupCurrentOperator" ) ]]( self.team );
    else
        _id_B6217B906C6BE73E[0] = "";

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "player", "lookupOtherOperator" ) )
        _id_B6217B906C6BE73E[1] = self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "player", "lookupOtherOperator" ) ]]( self.team );
    else
        _id_B6217B906C6BE73E[1] = "";

    return _id_B6217B906C6BE73E;
}
