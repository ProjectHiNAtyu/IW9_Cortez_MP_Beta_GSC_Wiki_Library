// IW9 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

main()
{
    setup_callbacks();
    setup_bot_war();
}

setup_callbacks()
{
    level.bot_funcs["gametype_think"] = ::bot_war_think;
}

setup_bot_war()
{

}

bot_war_think()
{
    self notify( "bot_war_think" );
    self endon( "bot_war_think" );
    self endon( "death_or_disconnect" );
    self endon( "revivedAlive" );
    level endon( "game_ended" );

    for (;;)
    {
        if ( self.health <= 0 )
            continue;

        self.has_started_thinking = 1;

        if ( self.team != game["attackers"] )
        {
            if ( isdefined( level.hostages ) && level.hostages.size > 0 && !istrue( self._id_55B3B870C0C77C55 ) )
            {
                _id_1C968BB9723B80C9 = undefined;

                foreach ( hostage in level.hostages )
                    _id_1C968BB9723B80C9 = hostage;

                _id_9ED6C7C2FA1BD5A6 = getclosestnodeinsight( _id_1C968BB9723B80C9.curorigin );

                if ( isdefined( _id_9ED6C7C2FA1BD5A6 ) )
                {
                    self botsetscriptgoalnode( _id_9ED6C7C2FA1BD5A6, "critical" );
                    thread _id_B6B69C7AB16E275D();
                    self._id_55B3B870C0C77C55 = 1;
                }
            }
        }
        else if ( getdvarint( "dvar_6E6FF06570492CAE", 0 ) )
        {
            if ( isdefined( level.hostages ) && level.hostages.size > 0 && !istrue( self._id_55B3B870C0C77C55 ) )
            {
                _id_1C968BB9723B80C9 = undefined;

                foreach ( hostage in level.hostages )
                    _id_1C968BB9723B80C9 = hostage;

                _id_9ED6C7C2FA1BD5A6 = getclosestnodeinsight( _id_1C968BB9723B80C9.curorigin );

                if ( isdefined( _id_9ED6C7C2FA1BD5A6 ) )
                {
                    self.startpoint = self.origin;
                    self botsetscriptgoalnode( _id_9ED6C7C2FA1BD5A6, "critical" );
                    thread _id_0E8D522864F68FE1();
                    self._id_55B3B870C0C77C55 = 1;
                }
            }
        }
        else
            self botsetflag( "disable_movement", 1 );

        waitframe();
    }
}

_id_0E8D522864F68FE1()
{
    self notify( "path_to_hostage" );
    self endon( "path_to_hostage" );
    self endon( "death_or_disconnect" );
    self endon( "bad_path" );
    level endon( "game_ended" );
    self waittill( "goal" );
    self botclearscriptgoal();
    _id_A23E7689A7572A84 = getclosestnodeinsight( self.startpoint );

    if ( isdefined( _id_A23E7689A7572A84 ) )
        self botsetscriptgoalnode( _id_A23E7689A7572A84, "critical" );
}

_id_B6B69C7AB16E275D()
{
    self notify( "path_to_hostage" );
    self endon( "path_to_hostage" );
    self endon( "death_or_disconnect" );
    self endon( "bad_path" );
    level endon( "game_ended" );
    self waittill( "goal" );

    while ( !istrue( self._id_5B3C77E2EAFAB370 ) )
    {
        self botpressbutton( "use", 0.5 );
        wait 1;
    }

    self botclearscriptgoal();

    if ( isdefined( level._id_F57A27B32E66A765 ) )
    {
        _id_9CC712DF12A78D2A = undefined;

        foreach ( extractzone in level._id_F57A27B32E66A765 )
            _id_9CC712DF12A78D2A = extractzone;

        _id_7D5BD76F6677060E = getclosestnodeinsight( _id_9CC712DF12A78D2A.curorigin );

        if ( isdefined( _id_7D5BD76F6677060E ) )
            self botsetscriptgoalnode( _id_7D5BD76F6677060E, "critical" );
    }
}
