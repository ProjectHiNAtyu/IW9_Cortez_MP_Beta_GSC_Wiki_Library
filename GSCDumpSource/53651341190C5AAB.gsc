// IW9 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

_id_72D72588305107B4( _id_F8D4ED108521E632 )
{

}

_id_8ADD99CB1B82B964( _id_F8D4ED108521E632 )
{
    self._id_7916F201EFB9963F = undefined;
    self._blackboard.idlenode = undefined;
}

_id_EFCEA5D26798E5B6( _id_CC4F2E0388379546 )
{
    switch ( _id_CC4F2E0388379546 )
    {
        case "start_cap":
            return ::_id_29946584B628C719;
        case "set_bseq_phase":
            return ::_id_606C28B248BADDFD;
        case "within_goal_dist":
            return ::_id_A75E4EAF48401358;
        case "bseqUser_isBseqPhase":
            return ::_id_75BDE4AB677D8C14;
        case "process_event":
            return ::processevent;
        case "OnAddUser":
            return ::_id_72D72588305107B4;
        case "OnDeleteUser":
            return ::_id_8ADD99CB1B82B964;
        case "ShouldLoopEndlessly":
            return ::_id_37E5A373B5F04BF7;
    }
}

_id_606C28B248BADDFD( statename, params )
{
    _id_72C614D54174DB7F = params[0];
    self._blackboard._id_7460B96395361857 = _id_72C614D54174DB7F;
}

_id_29946584B628C719( statename, params )
{
    _id_996949B7474560EB = _func_A0CCCF0B4C466B2C( self, params[0] );
    _id_3E38EE41DC326FDC = _id_996949B7474560EB._id_3E38EE41DC326FDC;
    animset = _id_996949B7474560EB.animation;
    _id_BCF3C74B1D8B4883 = _id_996949B7474560EB._id_BCF3C74B1D8B4883;
    _id_842A67EE2435339D = _id_996949B7474560EB.initialstate;
    _id_127E00A9379F717C = _id_996949B7474560EB._id_BAD4F0BD11CBDCF9;
    interaction = spawnstruct();
    interaction.angles = self._blackboard._id_66C82B7660F29059;
    interaction.origin = self._blackboard._id_AD5EDA311C73F5D7;

    if ( isdefined( self findoverridearchetype( "default" ) ) )
    {
        _id_051FB64C4BFCD847 = self findoverridearchetype( "default" ) + "_cap_arrival";

        if ( archetypehasstate( _id_3E38EE41DC326FDC, _id_051FB64C4BFCD847 ) )
            _id_BCF3C74B1D8B4883 = _id_051FB64C4BFCD847;
    }

    if ( isdefined( _id_842A67EE2435339D ) && isdefined( _id_127E00A9379F717C ) )
    {
        alias = archetypegetalias( animset, _id_842A67EE2435339D, _id_127E00A9379F717C, 0 );
        animation = alias.anims;

        if ( isarray( animation ) )
            animation = animation[0];

        originalangles = interaction.angles;
        originalorigin = interaction.origin;
        interaction.origin = getstartorigin( originalorigin, originalangles, animation );
        interaction.angles = getstartangles( originalorigin, originalangles, animation );
    }

    self._id_A70672E669CA7F00 = interaction.angles;
    self._id_718D80100704CC82 = interaction.origin;
    _id_010B6724C15A95E8::_id_E85F29F7EB1C5529( interaction, _id_3E38EE41DC326FDC, animset, _id_BCF3C74B1D8B4883 );
}

_id_B76D8B8AD8E2C823( statename, params )
{
    _id_996949B7474560EB = _func_A0CCCF0B4C466B2C( self, params[0] );
    _id_3E38EE41DC326FDC = _id_996949B7474560EB._id_3E38EE41DC326FDC;
    animset = _id_996949B7474560EB.animation;
    _id_BCF3C74B1D8B4883 = _id_996949B7474560EB._id_BCF3C74B1D8B4883;
    _id_842A67EE2435339D = _id_996949B7474560EB.initialstate;
    _id_127E00A9379F717C = _id_996949B7474560EB._id_BAD4F0BD11CBDCF9;
    interaction = spawnstruct();
    interaction.angles = self._blackboard._id_66C82B7660F29059;
    interaction.origin = self._blackboard._id_AD5EDA311C73F5D7;

    if ( isdefined( self findoverridearchetype( "default" ) ) )
    {
        _id_051FB64C4BFCD847 = self findoverridearchetype( "default" ) + "_cap_arrival";

        if ( archetypehasstate( _id_3E38EE41DC326FDC, _id_051FB64C4BFCD847 ) )
            _id_BCF3C74B1D8B4883 = _id_051FB64C4BFCD847;
    }

    if ( isdefined( _id_842A67EE2435339D ) && isdefined( _id_127E00A9379F717C ) )
    {
        alias = archetypegetalias( animset, _id_842A67EE2435339D, _id_127E00A9379F717C, 0 );
        animation = alias.anims;

        if ( isarray( animation ) )
            animation = animation[0];

        originalangles = interaction.angles;
        originalorigin = interaction.origin;
        interaction.origin = getstartorigin( originalorigin, originalangles, animation );
        interaction.angles = getstartangles( originalorigin, originalangles, animation );
    }

    self._id_A70672E669CA7F00 = interaction.angles;
    self._id_718D80100704CC82 = interaction.origin;
    _id_010B6724C15A95E8::_id_C434AF0895CC147C( _id_3E38EE41DC326FDC, animset, 0 );
    scripts\asm\asm::asm_fireephemeralevent( "move", "end" );
    self forceteleport( self._id_718D80100704CC82, self._id_A70672E669CA7F00, 2048 );
}

_id_A75E4EAF48401358( statename, params )
{
    _id_636C8575D7A7768B = params[0];

    if ( self.pathpending )
        return 0;

    return self pathdisttogoal() <= _id_636C8575D7A7768B;
}

processevent( receiver, info, origin )
{
    if ( info == "panicked" || info == "cower" || info == "scared" )
        self._blackboard._id_7460B96395361857 = "exit";
    else if ( !isdefined( self._blackboard._id_7460B96395361857 ) || isdefined( self._blackboard._id_7460B96395361857 ) && self._blackboard._id_7460B96395361857 != "end" )
    {
        self._blackboard._id_7460B96395361857 = "react";
        return 1;
    }

    return 0;
}

_id_75BDE4AB677D8C14( params )
{
    if ( isdefined( self._blackboard._id_7460B96395361857 ) )
    {
        if ( self._blackboard._id_7460B96395361857 == params[0] )
            return 1;
    }

    return 0;
}

_id_37E5A373B5F04BF7( _id_47A988F58C381403, statename, _id_F2B19B25D457C2A6, params )
{
    if ( !isdefined( self._id_F40B92D61F64ED3B ) )
        return 1;

    if ( isdefined( self._id_F40B92D61F64ED3B ) && self._id_F40B92D61F64ED3B )
        return 0;

    return 1;
}

empty( params )
{

}
